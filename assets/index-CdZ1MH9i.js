!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const i of e)if("childList"===i.type)for(const e of i.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class e{constructor(e){this.objectManager=e,this.sceneManager=e.getById("SceneManager"),this.enabled=!1,this.panel=null,this.createPanel()}createPanel(){this.panel=document.createElement("div"),this.panel.id="diagnostic-panel",this.panel.style.cssText="\n            position: fixed;\n            top: 10px;\n            right: 10px;\n            width: 675px;\n            height: calc(100vh - 20px);\n            background: rgba(0, 0, 0, 0.9);\n            color: #00ff00;\n            font-family: 'Courier New', monospace;\n            font-size: 12px;\n            padding: 10px;\n            border: 2px solid #00ff00;\n            border-radius: 5px;\n            z-index: 1000;\n            overflow-y: auto;\n            display: none;\n        ",this.panel.innerHTML='\n            <h3 style="margin-top: 0; margin-bottom:5px; color: #00ffff;">ðŸ”§ Diagnostics</h3>\n            <div id="diagnostic-content"></div>\n        ',document.body.appendChild(this.panel)}toggle(){this.enabled=!this.enabled,this.panel.style.display=this.enabled?"block":"none"}renderPanel(){if(this.enabled){const e=document.getElementById("diagnostic-content");if(!e)return;if(e.innerHTML="",this.sceneManager){let t=this.objectManager.getObjectStateHtml(),i=this.sceneManager.currentScene.getSceneStateHtml();e.innerHTML+=`\n                    <div style="border-bottom: 1px solid #00ff00; margin-bottom: 10px; padding-bottom: 5px;">\n                        ${t}\n                    </div>\n                    <div style="border-bottom: 1px solid #00ff00; margin-bottom: 10px; padding-bottom: 5px;">\n                        ${i}\n                    </div>\n                   `}}}destroy(){this.panel&&document.body.removeChild(this.panel)}}class t{static GameScenes=Object.freeze({splash:"splash",mainmenu:"mainmenu",ballsX:"ballsX",settings:"settings",settingsaudio:"settingsaudio",settingsgameplay:"settingsgameplay",settingsdeveloper:"settingsdeveloper"});constructor(e){this.objectManager=e,this.configManager=e.getById("ConfigManager"),this.sceneManager=e.getById("SceneManager"),this.canvas=e.getById("Main").canvas,this.ctx=this.canvas.getContext("2d"),this.selectedOption=1,this.menuOptionsCount=0}addMenuButton(e,t){var i=document.getElementById("idButtonContainer");if(i){var s=document.createElement("button");s.type="button",s.className="btn btn-primary",s.textContent=e,s.id="idMenuButton_"+t,s.setAttribute("tabindex","0"),s.dataset.idx=String(t),s._onClick=e=>{var t=e.currentTarget||s;this.selectedOption=Number(t.dataset.idx),"function"==typeof this.doMenuHandler&&this.doMenuHandler(this.selectedOption)},s.addEventListener("click",s._onClick),i.appendChild(s)}}addMenuButtons(e){e.forEach((e,t)=>{this.addMenuButton(e,t+1)}),this.menuOptionsCount=e.length,setTimeout(()=>{this.selectMenuButton(1)},30)}selectMenuButton(e){this.selectedOption=e;const t=document.getElementById("idMenuButton_"+e);t&&t.focus()}deleteMenuEventListeners(){const e=document.getElementById("idButtonContainer");if(!e)return;Array.from(e.querySelectorAll("button")).forEach(e=>{e._onClick&&(e.removeEventListener("click",e._onClick),e._onClick=null)})}enter(){}exit(){}updateFrame(){return null}getSceneStateHtml(){return""}getFocusedMenuButtonIndex(){const e=document.activeElement;return e&&e.id&&e.id.startsWith("idMenuButton_")?Number(e.dataset.idx):1}getSpecialKeys(){return["Escape","Enter","ArrowUp","ArrowDown","Control+KeyP","Control+KeyD"]}inputTouchAction(e,t,i,s={}){alert("Touch input not implemented yet :"+JSON.stringify({type:e,x:t,y:i,details:s}))}inputMouseAction(e,t,i,s={}){alert("Mouse input not implemented yet :"+JSON.stringify({type:e,x:t,y:i,details:s}))}inputKeyPressed(e){if(this.menuOptionsCount>0)switch(this.selectedOption=this.getFocusedMenuButtonIndex(),e){case"ArrowUp":this.selectedOption>1&&(this.selectedOption=this.selectedOption-1,this.selectMenuButton(this.selectedOption));break;case"ArrowDown":this.selectedOption<this.menuOptionsCount&&(this.selectedOption=this.selectedOption+1,this.selectMenuButton(this.selectedOption));break;case"Enter":this.doMenuHandler(this.selectedOption);break;case"Escape":this.doMenuHandler(1);break;default:this.inputKeyPressedOther(e)}else this.inputKeyPressedOther(e)}inputKeyPressedOther(e){}showOverlay(){const e=document.getElementById("idCanvasOverlay");e&&("function"==typeof this.insertHTMLOverlayContent&&this.insertHTMLOverlayContent(),e.style.display="block",this.sceneManager.doShowOverlay(),setTimeout(()=>{this.selectMenuButton(1)},5))}hideOverlay(){const e=document.getElementById("idCanvasOverlay");e&&(e.style.display="none",this.sceneManager.doHideOverlay())}}function i(e){return e/80}function s(e){return 80*e}class a{constructor(){this.world=null,this.eventHandlers=new Map,this.contactListeners=[]}create(){return this.world=new planck.World({allowSleep:!0}),this.world.on("begin-contact",e=>{this.handleContactEvent("collisionStart",e)}),this.world.on("end-contact",e=>{this.handleContactEvent("collisionEnd",e)}),this}handleContactEvent(e,t){if(this.eventHandlers.has(e)){const i=this.eventHandlers.get(e),s={pairs:[{bodyA:t.getFixtureA().getBody(),bodyB:t.getFixtureB().getBody()}]};i.forEach(e=>{e(s)})}}setGravity(e,t){if(this.world){const s=i(e),a=i(t);this.world.setGravity({x:s,y:a})}}setTimeScale(e){this.timeScale=e||1}update(e){if(this.world){const e=1/60;this.world.step(e,6,3)}}addBody(e){this.world&&e&&e.body}removeBody(e){if(this.world&&e){const t=e.body||e;this.world.destroyBody(t)}}getAllBodies(){if(!this.world)return[];const e=[];for(let t=this.world.getBodyList();t;t=t.getNext())e.push(t);return e}getBodiesByLabel(e){return this.getAllBodies().filter(t=>t.getUserData()?.label===e)}on(e,t){this.eventHandlers.has(e)||this.eventHandlers.set(e,[]),this.eventHandlers.get(e).push(t)}off(e,t){if(this.eventHandlers.has(e)){const i=this.eventHandlers.get(e),s=i.indexOf(t);s>-1&&i.splice(s,1)}}destroy(){this.world&&(this.eventHandlers.clear(),this.eventHandlers=null,this.world=null)}}class n{constructor(e){this.body=e}getPosition(){const e=this.body.getPosition();return{x:s(e.x),y:s(e.y)}}setPosition(e,t){const s=i(e),a=i(t);this.body.setTransform({x:s,y:a},this.body.getAngle())}getVelocity(){const e=this.body.getLinearVelocity();return{x:s(e.x),y:s(e.y)}}setVelocity(e,t){const s=i(e),a=i(t);this.body.setLinearVelocity({x:s,y:a})}getAngularVelocity(){return this.body.getAngularVelocity()}setAngularVelocity(e){this.body.setAngularVelocity(e)}setStatic(e){e?this.body.setType("static"):this.body.setType("dynamic")}isStatic(){return"static"===this.body.getType()}setSleeping(e){this.body.setAwake(!e)}isSleeping(){return!this.body.isAwake()}setUserData(e){this.body.setUserData(e)}set fillStyle(e){let t=this.body.getUserData();t.render.fillStyle=e,this.body.setUserData(t)}get id(){return this.body.getUserData()?.id||0}get label(){return this.body.getUserData()?.label||""}get angle(){return this.body.getAngle()}get speed(){const e=this.getVelocity();return Math.sqrt(e.x*e.x+e.y*e.y)}get bounds(){const e=new planck.AABB;let t=!0;for(let i=this.body.getFixtureList();i;i=i.getNext()){const s=i.getShape(),a=this.body.getTransform(),n=new planck.AABB;s.computeAABB(n,a,0),t?(e.lowerBound.set(n.lowerBound),e.upperBound.set(n.upperBound),t=!1):e.combine(n)}return{min:{x:s(e.lowerBound.x),y:s(e.lowerBound.y)},max:{x:s(e.upperBound.x),y:s(e.upperBound.y)}}}get circleRadius(){for(let e=this.body.getFixtureList();e;e=e.getNext()){const t=e.getShape();if(t.getType()===planck.Circle.TYPE)return s(t.getRadius())}return 0}}class o{static world=null;static setWorld(e){o.world=e}static createRectangle(e,t,s,a,r={}){if(!o.world)throw new Error("World not set. Call PhysicsBodyFactory.setWorld(world) first.");const l=i(e),c=i(t),d=i(s),h=i(a),u={type:r.isStatic?"static":"dynamic",position:{x:l,y:c},linearDamping:0,angularDamping:0};void 0!==r.angle&&(u.angle=r.angle);const g=o.world.createBody(u),p={shape:new planck.Box(d/2,h/2),density:r.density||1,friction:r.friction||.3,restitution:r.restitution||.1};g.createFixture(p);const m={id:o.generateId(),...r.userData};return g.setUserData(m),new n(g)}static createCircle(e,t,s,a={}){if(!o.world)throw new Error("World not set. Call PhysicsBodyFactory.setWorld(world) first.");const r=i(e),l=i(t),c=i(s),d={type:a.isStatic?"static":"dynamic",position:{x:r,y:l},linearDamping:a.linearDamping??0,angularDamping:a.angularDamping??0},h=o.world.createBody(d),u={shape:new planck.Circle(c),density:a.density||1,friction:a.friction||.3,restitution:a.restitution||.1};h.createFixture(u);const g={id:o.generateId(),...a.userData};return h.setUserData(g),new n(h)}static createPolygon(e,t={}){if(!o.world)throw new Error("World not set. Call PhysicsBodyFactory.setWorld(world) first.");let s,a,r=e.map(e=>planck.Vec2(i(e.x),i(e.y)));if(t.position)s={x:i(t.position.x),y:i(t.position.y)},a=r;else{let e={x:0,y:0};r.forEach(t=>{e.x+=t.x,e.y+=t.y}),e.x/=r.length,e.y/=r.length,a=r.map(t=>planck.Vec2(t.x-e.x,t.y-e.y)),s={x:e.x,y:e.y}}const l={type:t.isStatic?"static":"dynamic",position:s,linearDamping:t.linearDamping??0,angularDamping:t.angularDamping??0},c=o.world.createBody(l);if(t.isStatic&&a.length>1){for(let e=0;e<a.length-1;e++){const i=a[e],s=a[e+1],n={shape:new planck.Edge(i,s),density:t.density||1,friction:t.friction||.3,restitution:t.restitution||.1};c.createFixture(n)}if(a.length>2){const e=a[a.length-1],i=a[0],s={shape:new planck.Edge(e,i),density:t.density||1,friction:t.friction||.3,restitution:t.restitution||.1};c.createFixture(s)}}else{const e={shape:new planck.Polygon(a),density:t.density||1,friction:t.friction||.3,restitution:t.restitution||.1};c.createFixture(e)}const d={id:o.generateId(),...t.userData};return c.setUserData(d),new n(c)}static idCounter=1;static generateId(){return o.idCounter++}}class r{static getCollisionPairs(e){return e.pairs.map(e=>({bodyA:e.bodyA,bodyB:e.bodyB}))}}class l{constructor(e,t,i,s,a=!1){this.objectManager=e,this.sceneManager=e.getById("SceneManager"),this.sceneBallsX=e.getById("SceneBallsX"),this.playBall=a,this.deadBall=!1,this.combiningBall=!1,this.zapBall=!1,this.zapZoneTimerId=null,this.size=s,this.radius=this.calculateRadius(this.size);let n=this.getColorForSize(this.size);const r={label:"ball",ball:this,render:{radius:this.radius,fillStyle:n,strokeStyle:"#ffffff",lineWidth:3,visible:!0,showNumber:!0,size:this.size}};this.physicsBody=o.createCircle(t,i,this.radius,{label:"ball",density:1,friction:.1,restitution:.8,linearDamping:.1,angularDamping:.1,userData:r}),this.physicsBody.setStatic(!0),this.sceneBallsX.addBody(this.physicsBody)}getBallStateHtml(){let e="",t=this.physicsBody.body.getUserData(),s=t.render.radius,a=t.render.fillStyle;const n=i(s);let o=n*n*Math.PI*1;e+=this.physicsBody.id+":&nbsp;",e+='<svg width="12" height="12" style="vertical-align:middle;"><circle cx="6" cy="6" r="6" fill="'+a+'"/></svg>&nbsp;',e+="Size:"+this.size+"&nbsp;",e+="Mass:"+o.toFixed(2)+"&nbsp;",e+="Speed:"+this.physicsBody.speed.toFixed(3)+"&nbsp;";const r=this.physicsBody.getPosition();e+="Pos:"+r.x.toFixed(0)+","+r.y.toFixed(0)+"&nbsp;";const l=this.physicsBody.getVelocity();return e+="Vel:"+l.x.toFixed(3)+","+l.y.toFixed(3)+"&nbsp;",e+="Ang Vel:"+this.physicsBody.getAngularVelocity().toFixed(3)+"&nbsp;",e+=this.physicsBody.isSleeping()?"S":"",e+=this.playBall?"P":"",e+=this.zapBall?"Z":"",e+=this.deadBall?"D":"",e+="<br/>",e}calculateRadius(e){return 25+10*(e-1)}getColorForSize(e){const t=["#ff0080","#00ff80","#8000ff","#ff8000","#0080ff","#ff0040","#40ff00","#ff4000","#0040ff","#ff00c0","#00c0ff","#c000ff","#ffc000","#00ffc0","#c0ff00"];return t[(e-1)%t.length]}getPosition(){return this.physicsBody.getPosition()}setPosition(e,t){this.physicsBody.setPosition(e,t)}setStatic(e){this.physicsBody.setStatic(e)}leaveZapZone(){this.playBall=!1,this.zapBall=!1,this.cancelZapZoneTimerId()}enterZapZone(){this.zapBall=!0}setZapZoneTimerId(e){this.zapZoneTimerId=e}cancelZapZoneTimerId(){this.zapZoneTimerId&&(clearTimeout(this.zapZoneTimerId),this.zapZoneTimerId=null)}release(){if(!this.physicsBody)return alert("Error: Ball physics body is null in release()"),void this.destroy();this.physicsBody.setStatic(!1),this.physicsBody.setAngularVelocity(0),this.physicsBody.setVelocity(0,0),this.playBall=!1}destroy(){try{this.sceneBallsX&&this.sceneBallsX.physics&&this.sceneBallsX.removeBody(this.physicsBody)}catch(e){}this.physicsBody=null,this.objectManager=null,this.sceneManager=null,this.combiningBall=!1}}class c{constructor(e){this.objectManager=e,this.sceneManager=e.getById("SceneManager"),this.sceneBallsX=e.getById("SceneBallsX"),this.audioHandler=e.getById("AudioHandler"),this.particlesHandler=e.getById("ParticlesHandler"),this.canvasHeight=this.sceneManager.canvas.height,this.canvasWidth=this.sceneManager.canvas.width,this.gaameOver=!1,this.playBall=null,this.lastCleanupTime=0,this.lastDropTime=0,this.lastPlayBallPosition=this.canvasWidth/2,this.combineQueue=[]}getBallBodies(){return this.sceneBallsX&&this.sceneBallsX.physics&&this.sceneBallsX.physics.getBodiesByLabel("ball")||[]}getBallsStateHtml(){let e="<strong>Ball Details</strong><br>";return this.getBallBodies().forEach(t=>{const i=t.getUserData()?.ball;i&&(e+=`${i.getBallStateHtml()}`)}),e}keepXWithinBounds(e,t){const i=t.radius,s=p+i+2,a=this.canvasWidth-p-i-2;return Math.max(s,Math.min(a,e))}ballInZapZone(){let e=this.getBallBodies();for(const t of e){const e=t.getUserData()?.ball;if(e&&e.zapBall)return!0}return!1}spawnPlayBall(){if(null!==this.playBall)return;if(this.gameOver)return;if(performance.now()-this.lastDropTime<1e3)return;if(this.ballInZapZone())return;this.playBall=new l(this.objectManager,512,-100,Math.floor(5*Math.random())+1,!0);let e=this.keepXWithinBounds(this.lastPlayBallPosition,this.playBall);this.playBall.setPosition(e,102)}dropPlayBall(){null!==this.playBall&&(this.playBall.release(),this.lastDropTime=performance.now(),this.playBall=null)}movePlayBall(e){if(null===this.playBall)return;const t=this.playBall.getPosition();let i=t.x+5*e;i=this.keepXWithinBounds(i,this.playBall),this.playBall.setPosition(i,t.y),this.lastPlayBallPosition=i}handleTouchAction(e,t,i,s={}){if(null===this.playBall)return;let a=this.playBall.getPosition(),n=this.keepXWithinBounds(t,this.playBall);this.playBall.setPosition(n,a.y),this.lastPlayBallPosition=n;const o=document.getElementById("idCanvasControl");o&&(o.style.cursor="move"),"touchend"===e&&(this.dropPlayBall(),o&&(o.style.cursor="default"))}queueCombine(e,t){return!(!e||!t)&&(this.combineQueue.push({ballA:e,ballB:t}),!0)}dequeueCombine(){return 0===this.combineQueue.length?null:this.combineQueue.shift()}processCombineQueue(){for(;this.combineQueue.length>0;){const e=this.dequeueCombine();if(!e)break;const{ballA:t,ballB:i}=e;t&&i&&this.combineBallsMerge(t,i)}}combineBallsMerge(e,t){e.cancelZapZoneTimerId(),t.cancelZapZoneTimerId(),this.sceneBallsX.score+=e.size*e.size*2;const i=e.size<15?e.size+1:15,s=e.getPosition(),a=t.getPosition(),n=(s.x+a.x)/2,o=(s.y+a.y)/2,r=e.physicsBody.getVelocity(),c=t.physicsBody.getVelocity(),d=(r.x+c.x)/2,h=(r.y+c.y)/2,u=new l(this.objectManager,n,o,i,!1),g=e.getColorForSize(i);u.physicsBody.setVelocity(d,h),u.physicsBody.setStatic(!1),this.particlesHandler.combineEffect([n,o],g);let p=Math.floor(6*Math.random())+1;this.audioHandler.playSFX(`Combine${p}`),e.destroy(),t.destroy(),e=null,t=null}combineBalls(e,t){return!e.combiningBall&&!t.combiningBall&&(!e.playBall&&!t.playBall&&(e.combiningBall=!0,t.combiningBall=!0,void this.queueCombine(e,t)))}gameOver_BonusBalls(){let e=this.getBallBodies(),t="Bonus Balls: ",i=0;e.forEach(e=>{let s=e.getUserData()?.ball;s.playBall||s.deadBall||(i+=500,t+=s.physicsBody.id+" ",t+="; ",setTimeout(()=>{this.sceneBallsX.score+=s.size*s.size;let e=Math.floor(6*Math.random())+1;this.audioHandler.playSFX(`Combine${e}`);let t=s.getPosition();const i=s.getColorForSize(s.size);this.particlesHandler.combineEffect([t.x,t.y],i),s.destroy(),s=null},i))})}gameOver_DeadBalls(){if(this.gameOver)return;this.gameOver=!0;let e=this.getBallBodies(),t="Ball Left: ";e.forEach(e=>{let i=e.getUserData()?.ball,s=500;t+=i.physicsBody.id+" ",i.playBall?(i.cancelZapZoneTimerId(),i.destroy(),i=null,t+="PlayBall "):i.zapBall&&(i.deadBall=!0,i.physicsBody.fillStyle="#000000",t+="Dead ",i.cancelZapZoneTimerId(),s+=250,setTimeout(()=>{let e=i.getPosition();this.particlesHandler.combineEffect([e.x,e.y],"#FFFFFF"),i.destroy(),i=null},s)),t+="; ",i&&i.setStatic(!0)})}updateFrame(){this.spawnPlayBall(),this.updateBallStates(),this.processCombineQueue()}updateBallStates(){this.getBallBodies(),this.cleanup()}cleanup(){let e=performance.now();e-this.lastCleanupTime<15e3||(this.lastCleanupTime=e,this.getBallBodies().forEach(e=>{const t=e.getUserData()?.ball;if(t){t.getPosition().y>this.canvasHeight+100&&t.destroy()}}))}destroy(){this.getBallBodies().forEach(e=>{let t=e.getUserData()?.ball;t&&(t.destroy(),t=null)}),this.sceneManager=null,this.sceneBallsX=null,this.objectManager=null,this.audioHandler=null}}class d{constructor(e,t={}){this.canvas=e,this.ctx=e.getContext("2d"),this.lasers=[],this.defaultOptions={beamStyle:t.beamStyle??"solid",coords1:t.coords1??[0,e.height/2],coords2:t.coords2??[e.width,e.height/2],shootDuration:t.shootDuration??800,fadeDuration:t.fadeDuration??800,beamColor:t.beamColor??"#00ffff",glowColor:t.glowColor??"#00ffff",tipColor:t.tipColor??t.glowColor??"#00ffff",glowSize:t.glowSize??24,beamWidth:t.beamWidth??4,tipSize:t.tipSize??24,tipStyle:t.tipStyle??"arrow",particleConfig:Object.assign({color:"#fff",glowColor:"#00ffff",size:6,speed:3,life:600,fade:!0,rate:.8},t.particleConfig||{})}}fire(e=1){return this.addLaser(e,{})}addLaser(e=1,t={}){const i=Object.assign({},this.defaultOptions,t),s={id:Date.now()+Math.random(),active:!0,opacity:1,progress:0,timer:0,phase:0===e?"fade":"shoot",direction:e,particles:[],...i};return 0===e&&(s.progress=1),this.lasers.push(s),s.id}removeLaser(e){const t=this.lasers.findIndex(t=>t.id===e);return-1!==t&&(this.lasers.splice(t,1),!0)}getActiveLaserCount(){return this.lasers.filter(e=>e.active).length}clearAllLasers(){this.lasers=[]}destroy(){if(Array.isArray(this.lasers))for(let e=0;e<this.lasers.length;e++){const t=this.lasers[e];t&&Array.isArray(t.particles)&&(t.particles.length=0);for(const e in t)Object.hasOwnProperty.call(t,e)&&(t[e]=null)}this.lasers=[],this.canvas=null,this.ctx=null,this.defaultOptions=null}update(e){for(let t=this.lasers.length-1;t>=0;t--){const i=this.lasers[t];i.active?(i.timer+=e,"shoot"===i.phase?(i.progress=Math.min(1,i.timer/i.shootDuration),i.progress>=1&&(i.phase="fade",i.timer=0)):"fade"===i.phase&&(i.opacity=1-Math.min(1,i.timer/i.fadeDuration),i.opacity<=0&&(i.active=!1,i.phase="idle")),this._updateParticles(i,e)):this.lasers.splice(t,1)}}render(){for(const e of this.lasers)e.active&&this._renderLaser(e)}_renderLaser(e){const t=this.ctx;let i,s,a,n;e.direction>=0?([i,s]=e.coords1,[a,n]=e.coords2):([i,s]=e.coords2,[a,n]=e.coords1);const o=i+(a-i)*e.progress,r=s+(n-s)*e.progress;switch(t.save(),t.globalAlpha=e.opacity,t.shadowColor=e.glowColor,t.shadowBlur=e.glowSize,t.lineCap="round",t.lineWidth=e.beamWidth,t.strokeStyle=e.beamColor,e.beamStyle){case"solid":default:this._drawSolidBeam(i,s,o,r);break;case"dashed":this._drawDashedBeam(i,s,o,r);break;case"crackling":this._drawCracklingBeam(i,s,o,r,e);break;case"tazer":this._drawTazerBeam(i,s,o,r,e);break;case"pulsing":this._drawPulsingBeam(i,s,o,r,e);break;case"charged":this._drawChargedBeam(i,s,o,r,e);break;case"plasma":this._drawPlasmaBeam(i,s,o,r,e);break;case"disruptor":this._drawDisruptorBeam(i,s,o,r,e)}t.shadowBlur=0,0!==e.direction&&"shoot"===e.phase&&this._drawBeamTip(o,r,i,s,a,n,e),"shoot"===e.phase&&this._emitParticles(o,r,e),this._renderParticles(t,e),t.restore()}_drawSolidBeam(e,t,i,s){this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.lineTo(i,s),this.ctx.stroke()}_drawDashedBeam(e,t,i,s){this.ctx.setLineDash([16,8]),this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.lineTo(i,s),this.ctx.stroke(),this.ctx.setLineDash([])}_drawCracklingBeam(e,t,i,s,a){const n=Math.sqrt((i-e)**2+(s-t)**2),o=Math.floor(n/8),r=1.5*a.beamWidth;this.ctx.beginPath(),this.ctx.moveTo(e,t);for(let l=1;l<=o;l++){const a=l/o,n=e+(i-e)*a,c=t+(s-t)*a,d=(Math.random()-.5)*r,h=(Math.random()-.5)*r;this.ctx.lineTo(n+d,c+h)}this.ctx.lineTo(i,s),this.ctx.stroke()}_drawTazerBeam(e,t,i,s,a){const n=Math.sqrt((i-e)**2+(s-t)**2),o=Math.floor(n/12),r=4*a.beamWidth;this.ctx.beginPath(),this.ctx.moveTo(e,t);for(let l=1;l<=o;l++){const a=l/o,n=e+(i-e)*a,c=t+(s-t)*a,d=l%2==0?1:-1,h=(Math.random()-.5)*r+d*r*.3,u=(Math.random()-.5)*r+d*r*.3;this.ctx.lineTo(n+h,c+u)}this.ctx.lineTo(i,s),this.ctx.lineTo(i,s),this.ctx.stroke()}_drawPulsingBeam(e,t,i,s,a){const n=.6*Math.sin(3*a.timer*.01)+1;this.ctx.lineWidth=a.beamWidth*n,this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.lineTo(i,s),this.ctx.stroke()}_drawChargedBeam(e,t,i,s,a){const n=.8*a.beamWidth;this.ctx.lineWidth=.3*a.beamWidth;for(let o=0;o<4;o++){const a=o/4*Math.PI*2,r=Math.cos(a)*n,l=Math.sin(a)*n;this.ctx.beginPath(),this.ctx.moveTo(e+r,t+l),this.ctx.lineTo(i+r,s+l),this.ctx.stroke()}}_drawPlasmaBeam(e,t,i,s,a){this.ctx.save(),this.ctx.lineWidth=3*a.beamWidth,this.ctx.globalAlpha=.3*a.opacity,this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.lineTo(i,s),this.ctx.stroke(),this.ctx.lineWidth=1.8*a.beamWidth,this.ctx.globalAlpha=.6*a.opacity,this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.lineTo(i,s),this.ctx.stroke(),this.ctx.lineWidth=.8*a.beamWidth,this.ctx.globalAlpha=a.opacity,this.ctx.strokeStyle="#ffffff",this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.lineTo(i,s),this.ctx.stroke(),this.ctx.restore()}_drawDisruptorBeam(e,t,i,s,a){const n=2*a.beamWidth,o=i-e,r=s-t,l=Math.sqrt(o*o+r*r),c=-r/l,d=o/l;this.ctx.lineWidth=a.beamWidth/3;for(let h=0;h<3;h++){const a=(h-1)*n,o=e+c*a,r=t+d*a,l=i+c*a,u=s+d*a,g=8;this.ctx.beginPath(),this.ctx.moveTo(o,r);for(let n=1;n<=g;n++){const a=n/g;let c=o+(l-o)*a,d=r+(u-r)*a;if(Math.random()<.3){const n=.7;c=c*(1-n)+(e+(i-e)*a)*n,d=d*(1-n)+(t+(s-t)*a)*n}this.ctx.lineTo(c,d)}this.ctx.stroke()}}_drawBeamTip(e,t,i,s,a,n,o){if(this.ctx.save(),this.ctx.globalAlpha=.9*o.opacity,this.ctx.fillStyle=o.tipColor,this.ctx.shadowColor=o.tipColor,this.ctx.shadowBlur=1.5*o.glowSize,"circle"===o.tipStyle)this.ctx.beginPath(),this.ctx.arc(e,t,.6*o.tipSize,0,2*Math.PI),this.ctx.fill();else{const r=a-i,l=n-s,c=Math.atan2(l,r);this.ctx.translate(e,t),this.ctx.rotate(c),this.ctx.beginPath(),this.ctx.moveTo(o.tipSize,0),this.ctx.lineTo(.4*-o.tipSize,.3*-o.tipSize),this.ctx.lineTo(.4*-o.tipSize,.3*o.tipSize),this.ctx.closePath(),this.ctx.fill()}this.ctx.restore()}_emitParticles(e,t,i){const s=Math.floor(5*i.particleConfig.rate);for(let a=0;a<s;a++)if(Math.random()<i.particleConfig.rate){const s=Math.random()*Math.PI*2,a=i.particleConfig.speed*(1+2*Math.random());i.particles.push({x:e+(Math.random()-.5)*i.beamWidth*.5,y:t+(Math.random()-.5)*i.beamWidth*.5,vx:Math.cos(s)*a,vy:Math.sin(s)*a,life:i.particleConfig.life*(.5+.5*Math.random()),age:0,size:i.particleConfig.size*(.3+.4*Math.random()),length:8+12*Math.random(),color:i.particleConfig.color,glowColor:i.particleConfig.glowColor,fade:i.particleConfig.fade,trail:Math.random()>.5})}}_updateParticles(e,t){for(let i of e.particles)i.x+=i.vx,i.y+=i.vy,i.age+=t;e.particles=e.particles.filter(e=>e.age<e.life)}_renderParticles(e,t){for(let i of t.particles){const s=i.fade?1-i.age/i.life:1;if(!(s<=.01)){if(e.save(),e.globalAlpha=s*t.opacity,i.trail){e.strokeStyle=i.glowColor,e.shadowColor=i.glowColor,e.shadowBlur=3*i.size,e.lineWidth=.5*i.size,e.lineCap="round";const t=i.x-i.vx*(i.length/10),s=i.y-i.vy*(i.length/10);e.beginPath(),e.moveTo(i.x,i.y),e.lineTo(t,s),e.stroke()}else e.shadowColor=i.glowColor,e.shadowBlur=4*i.size,e.beginPath(),e.arc(i.x,i.y,i.size,0,2*Math.PI),e.fillStyle=i.color,e.fill();e.restore()}}}}class h{constructor(e){this.objectManager=e,this.canvas=this.objectManager.getById("Main").canvas,this.LaserbeamMark=this.objectManager.register("LaserbeamMark",new d(this.canvas,{beamStyle:"solid"}))}fire(e){let t={coords1:[0,180],coords2:[this.canvas.width,180],beamStyle:"solid"};this.laserId=this.LaserbeamMark.addLaser(e,t),this.laserId=this.LaserbeamMark.addLaser(-e,t)}render(){this.LaserbeamMark.render()}update(e){this.LaserbeamMark.update(e)}destroy(){this.LaserbeamMark&&(this.LaserbeamMark.destroy(),this.objectManager.deregister(this.LaserbeamMark),this.LaserbeamMark=null)}}class u{constructor(e,t={}){this.canvas=e,this.ctx=e.getContext("2d"),this.effects=[]}update(e){const t=performance.now();for(let i=this.effects.length-1;i>=0;i--){let s=this.effects[i];if(0!==s.particles.length){for(let i=s.particles.length-1;i>=0;i--){let a=s.particles[i];if("function"==typeof s.updateParticle){if(!1===s.updateParticle(a,e,t)){s.particles.splice(i,1);continue}}else a.gravity<0&&!a.exploded?(a.yv+=a.gravity,a.y<a.peakY&&(a.exploded=!0,a.xv=4*(Math.random()-.5),a.yv=2*Math.random()+1)):a.yv+=a.gravity,a.xv*=a.friction,a.yv*=a.friction,a.x+=a.xv,a.y+=a.yv;t-a.created>=a.ttl&&s.particles.splice(i,1)}0===s.particles.length&&this.effects.splice(i,1)}else this.effects.splice(i,1)}}render(){this.drawEffects()}drawEffects(){const e=performance.now();for(let t=this.effects.length-1;t>=0;t--){let i=this.effects[t];for(let t=i.particles.length-1;t>=0;t--){let s=i.particles[t];const a=1-(e-s.created)/s.ttl;this.ctx.save(),this.ctx.globalAlpha=Math.max(0,Math.min(1,a));const n=`rgb(${s.r}, ${s.g}, ${s.b})`;this.ctx.fillStyle=n;const o=Math.max(s.size,.5),r=s.x,l=s.y,c=s.shape||"circle",d=i&&i.options&&void 0!==i.options.glowStrength?Number(i.options.glowStrength):0;if(d>0?(this.ctx.shadowColor=n,this.ctx.shadowBlur=Math.max(0,Math.round(o*d)),this.ctx.shadowOffsetX=0,this.ctx.shadowOffsetY=0):this.ctx.shadowBlur=0,"circle"===c)this.ctx.beginPath(),this.ctx.arc(r,l,o,0,2*Math.PI),this.ctx.fill();else if("square"===c)this.ctx.translate(r,l),this.ctx.rotate(s.angle||0),this.ctx.fillRect(-o,-o,2*o,2*o);else if("rect"===c||"ribbon"===c){const e=o*("ribbon"===c?3:2),t=o;this.ctx.translate(r,l),this.ctx.rotate(s.angle||0),this.ctx.fillRect(-e/2,-t/2,e,t)}else if("star"===c){const e=5,t=1.6*o,i=.6*o;let s=Math.PI/2*3,a=r,n=l;this.ctx.beginPath(),this.ctx.moveTo(a,n-t);for(let o=0;o<e;o++){const o=a+Math.cos(s)*t,r=n+Math.sin(s)*t;this.ctx.lineTo(o,r),s+=Math.PI/e;const l=a+Math.cos(s)*i,c=n+Math.sin(s)*i;this.ctx.lineTo(l,c),s+=Math.PI/e}this.ctx.closePath(),this.ctx.fill()}else this.ctx.beginPath(),this.ctx.arc(r,l,o,0,2*Math.PI),this.ctx.fill();this.ctx.restore()}}}addEffect(e,t,i={}){const[s,a]=t;let n;switch(e){case"explosion":n=new u.Explosion(s,a,i);break;case"confetti":n=new u.Confetti(s,a,i);break;case"fireworks":n=new u.Fireworks(s,a,i);break;default:throw new Error(`Unknown effect type: ${e}`)}this.effects.push(n)}destroy(){if(Array.isArray(this.effects))for(let e=0;e<this.effects.length;e++){const t=this.effects[e];t&&Array.isArray(t.particles)&&(t.particles.length=0);for(const e in t)Object.hasOwnProperty.call(t,e)&&(t[e]=null)}this.effects=[],this.canvas=null,this.ctx=null}static Explosion=class{constructor(e,t,i){this.type="explosion",this.particles=[],this.particlesPerExplosion=i.particlesPerExplosion??30,this.particlesMinSpeed=i.particlesMinSpeed??3,this.particlesMaxSpeed=i.particlesMaxSpeed??6,this.particlesMinSize=i.particlesMinSize??1,this.particlesMaxSize=i.particlesMaxSize??6,this.options=Object.assign({jitter:1,frictionMin:.96,frictionMax:.995,gravity:.02,lifetimeMinMs:600,lifetimeMaxMs:1400,rMin:113,rMax:222,gMin:0,gMax:100,bMin:105,bMax:255},i);for(let s=0;s<this.particlesPerExplosion;s++)this.particles.push(new u.Particle(e,t,this.particlesMinSpeed,this.particlesMaxSpeed,this.particlesMinSize,this.particlesMaxSize,this.options));this.updateParticle=function(e,t,i){return e.yv+=e.gravity,e.xv*=e.friction,e.yv*=e.friction,e.x+=e.xv,e.y+=e.yv,!0}}};static Confetti=class{constructor(e,t,i){this.type="confetti",this.particles=[],this.particlesPerExplosion=i.particlesPerExplosion??50,this.particlesMinSpeed=i.particlesMinSpeed??1,this.particlesMaxSpeed=i.particlesMaxSpeed??4,this.particlesMinSize=i.particlesMinSize??2,this.particlesMaxSize=i.particlesMaxSize??8,this.options=Object.assign({jitter:1,frictionMin:.98,frictionMax:.999,gravity:.01,lifetimeMinMs:2e3,lifetimeMaxMs:4e3,rMin:200,rMax:255,gMin:100,gMax:255,bMin:50,bMax:200},i);for(let s=0;s<this.particlesPerExplosion;s++){const i=new u.Particle(e,t,this.particlesMinSpeed,this.particlesMaxSpeed,this.particlesMinSize,this.particlesMaxSize,this.options),s=["square","circle","ribbon","star"];i.shape=s[Math.floor(Math.random()*s.length)],i.angle=Math.random()*Math.PI*2,i.angularVelocity=.2*(Math.random()-.5),i.sway=.5+1.5*Math.random(),i.swayFreq=.6+1.6*Math.random(),i.swayPhase=Math.random()*Math.PI*2,this.particles.push(i)}this.updateParticle=function(e,t,i){const s=.001*i,a=Math.max(.5,Math.min(2,t/16));return e.xv+=.02*Math.sin(s*(e.swayFreq||1)+(e.swayPhase||0))*(e.sway||1)*a,e.angle=(e.angle||0)+(e.angularVelocity||0),e.yv+=e.gravity,e.xv*=e.friction,e.yv*=e.friction,e.x+=e.xv,e.y+=e.yv,!0}}};static Fireworks=class{constructor(e,t,i){this.type="fireworks",this.particles=[],this.particlesPerExplosion=i.particlesPerExplosion??20,this.particlesMinSpeed=i.particlesMinSpeed??5,this.particlesMaxSpeed=i.particlesMaxSpeed??10,this.particlesMinSize=i.particlesMinSize??2,this.particlesMaxSize=i.particlesMaxSize??4,this.options=Object.assign({jitter:.5,frictionMin:.99,frictionMax:.999,gravity:-.05,lifetimeMinMs:1e3,lifetimeMaxMs:2e3,rMin:255,rMax:255,gMin:200,gMax:255,bMin:0,bMax:100},i);for(let s=0;s<this.particlesPerExplosion;s++)this.particles.push(new u.Particle(e,t,this.particlesMinSpeed,this.particlesMaxSpeed,this.particlesMinSize,this.particlesMaxSize,this.options));this.updateParticle=function(e,t,i){if(e.gravity<0&&!e.exploded){if(e.yv+=e.gravity,e.y<e.peakY){e.exploded=!0;const t=Math.random()*Math.PI*2,i=4*Math.random()+2;e.xv=Math.cos(t)*i,e.yv=Math.sin(t)*i}}else e.yv+=e.gravity;return e.xv*=e.friction,e.yv*=e.friction,e.x+=e.xv,e.y+=e.yv,!0}}};static Particle=class{constructor(e,t,i,s,a,n,o={}){this.x=e,this.y=t;const r=Math.random()*Math.PI*2,l=(Math.random()*(s-i)+i)*(.5+Math.random());this.xv=Math.cos(r)*l,this.yv=Math.sin(r)*l;const c=(o.jitter||0)*(Math.random()-.5);this.x+=c,this.y+=c,this.size=u.randRange(a,n,!1);const d=Object.assign({},o);null!=d.frictionMin&&(d.frictionMin=Number(d.frictionMin)),null!=d.frictionMax&&(d.frictionMax=Number(d.frictionMax)),null!=d.gravity&&(d.gravity=Number(d.gravity)),null!=d.lifetimeMs&&(d.lifetimeMs=Number(d.lifetimeMs)),null!=d.lifetimeMinMs&&(d.lifetimeMinMs=Number(d.lifetimeMinMs)),null!=d.lifetimeMaxMs&&(d.lifetimeMaxMs=Number(d.lifetimeMaxMs)),d.lifetimeJitter=d.lifetimeJitter??.5;const h=d.rMin??113,g=d.rMax??222,p=d.gMin??0,m=d.gMax??100,y=d.bMin??105,f=d.bMax??255;this.r=Math.floor(u.randRange(h,g,!1)),this.g=Math.floor(u.randRange(p,m,!1)),this.b=Math.floor(u.randRange(y,f,!1)),this.friction=u.randRange(d.frictionMin??.96,d.frictionMax??.995,!1),this.gravity=d.gravity??.02,this.gravity<0&&(this.peakY=this.y-50*Math.random()-50,this.exploded=!1);const M=null!=d.lifetimeMs?Number(d.lifetimeMs):u.randRange(d.lifetimeMinMs,d.lifetimeMaxMs,!1),b=Math.max(0,Math.min(1,Number(d.lifetimeJitter))),v=1-b,x=Math.random()*b+v;this.created=performance.now(),this.lifeJitter=x,this.ttl=Math.max(16,M*x)}};static randRange(e,t,i){const s=Number(e),a=Number(t);return i?Math.floor(Math.random()*(a-s+1))+Math.floor(s):Math.random()*(a-s)+s}}class g{constructor(e){this.objectManager=e,this.canvas=this.objectManager.getById("Main").canvas,this.particlesMark=this.objectManager.register("ParticlesMark",new u(this.canvas))}hexToRgb(e){3===(e=e.replace(/^#/,"")).length&&(e=e.split("").map(e=>e+e).join(""));const t=parseInt(e,16);return{r:t>>16&255,g:t>>8&255,b:255&t}}combineEffect(e,t){const{r:i,g:s,b:a}=this.hexToRgb(t);let n=Math.max(0,i-16),o=Math.min(255,i+16),r=Math.max(0,s-16),l=Math.min(255,s+16),c=Math.max(0,a-16),d=Math.min(255,a+16);this.particlesMark.addEffect("explosion",e,{rMin:n,rMax:o,gMin:r,gMax:l,bMin:c,bMax:d})}update(e){this.particlesMark.update(e)}render(){this.particlesMark.render()}destroy(){this.particlesMark&&(this.particlesMark.destroy(),this.objectManager.deregister(this.particlesMark),this.particlesMark=null)}}const p=8,m=1e3/60;class y extends t{constructor(e){super(e),this.audioHandler=e.getById("AudioHandler"),this.sceneManager=e.getById("SceneManager"),this.configManager=e.getById("ConfigManager"),this.physics=e.register("PhysicsEngine",new a),this.laserbeamHandler=this.objectManager.register("LaserbeamHandler",new h(this.objectManager)),this.particlesHandler=this.objectManager.register("ParticlesHandler",new g(this.objectManager)),this.imageHandler=this.objectManager.getById("ImageHandler"),this.physics.create(),this.physics.setGravity(0,300),this.physics.setTimeScale(1),o.setWorld(this.physics.world),this.clock={deltaTime:0,currentTime:performance.now(),lastStatsUpdate:0,cachedDeltaTime:0,cachedFPS:0,stepCount:0,cachedStepCount:0},this.showingDialog=!1,this.exitToMenu=!1,this.restartGame=!1,this.scoreHighest=this.configManager.getHighestScore(`BallsX-${this.configManager.gameSize}`)||0,this.score=0,this.clickedCoord=null,this.setupWallBoundaries(),this.setupGroundBoundaries(),this.setupZapZone(),this.setupEventHandlers(),this._physicsAccumulator=0,this.transitionActive=!0,this.transitionRadius=5,this.transitionCenterX=this.canvas.width/2,this.transitionCenterY=this.canvas.height/2,this.transitionSpeed=1e3}getSceneStateHtml(){const e=performance.now(),t=e-this.clock.lastStatsUpdate;t>500&&(this.clock.cachedDeltaTime=this.clock.deltaTime.toFixed(2),this.clock.cachedFPS=(1e3/this.clock.deltaTime).toFixed(1),this.clock.cachedStepCount=(1e3*this.clock.stepCount/t).toFixed(1),this.clock.stepCount=0,this.clock.lastStatsUpdate=e);return`\n            <strong>Scene: BallsX</strong><br>\n            Delta Time: ${this.clock.cachedDeltaTime}ms,&nbsp;\n            FPS: ${this.clock.cachedFPS},&nbsp;\n            StepsPS: ${this.clock.cachedStepCount}\n            <br><hr style="border: none; border-top: 1px solid #00ff00; margin-top: 5px; margin-bottom: 5px;">\n            ${this.ballManager.getBallsStateHtml()}\n        `}setupEventHandlers(){this.physics.on("collisionStart",e=>{r.getCollisionPairs(e).forEach(({bodyA:e,bodyB:t})=>{e===t&&alert("Self-collision detected");const i=e.getUserData().label,s=t.getUserData().label;if("ball"===i&&"ball"===s){if(e.getUserData().render.size===t.getUserData().render.size){const i=e.getUserData()?.ball,s=t.getUserData()?.ball;this.ballManager.combineBalls(i,s)}}if("ball"===i&&"zapzone"===s||"zapzone"===i&&"ball"===s){const s="ball"===i?e:t,a=s.getUserData()?.ball;a.playBall||this.handleZapZone(a)}})}),this.physics.on("collisionEnd",e=>{r.getCollisionPairs(e).forEach(({bodyA:e,bodyB:t})=>{const i=e.getUserData().label,s=t.getUserData().label;if("ball"===i&&"zapzone"===s||"zapzone"===i&&"ball"===s){const s="ball"===i?e:t,a=s.getUserData()?.ball;a.leaveZapZone()}})})}setupZapZone(){const e=this.canvas.width-2*p,t={fillStyle:`rgba(255,0,0,${this.configManager.dev?.2:0})`,strokeStyle:"#ff0000",lineWidth:0,width:e,height:400},i=o.createRectangle(this.canvas.width/2,-20,e,400,{isStatic:!0,userData:{label:"zapzone",render:t},isSensor:!0}),s=i.body.getFixtureList();s&&s.setSensor(!0),this.zapZoneBody=i,this.physics.addBody(i)}setupWallBoundaries(){const e=this.canvas.width,t=this.canvas.height,i={fillStyle:"#000000",strokeStyle:"#000000",lineWidth:3,width:p,height:t},s=o.createRectangle(p/2,t/2,p,t,{isStatic:!0,friction:.5,restitution:.7,userData:{label:"leftwall",render:i}}),a=o.createRectangle(e-p/2,t/2,p,t,{isStatic:!0,friction:.5,restitution:.7,userData:{label:"rightwall",render:i}});this.physics.addBody(s),this.physics.addBody(a)}setupGroundBoundaries(){const e=this.canvas.width;this.canvas.height;const t={fillStyle:"rgba(255, 0, 0, 0.5)",strokeStyle:"#ff0000",lineWidth:1,width:e,height:p},i=[{x:625,y:100},{x:-625,y:100},{x:-625,y:-195},{x:-455,y:-101.5},{x:-390,y:-134},{x:-195,y:-30},{x:-130,y:-62.5},{x:-65,y:-30},{x:0,y:-62.5},{x:65,y:-30},{x:130,y:-62.5},{x:195,y:-30},{x:390,y:-134},{x:455,y:-101.5},{x:625,y:-195}];let s=0;switch(this.configManager.gameSize){case"Large":s=720;break;case"Medium":s=648;break;case"Small":s=576}const a={x:e/2,y:s};t.polygon={vertices:i,position:a};const n=o.createPolygon(i,{isStatic:!0,friction:.5,restitution:.7,position:a,userData:{label:"ground",render:t}});this.physics.addBody(n)}addBody(e){this.physics.addBody(e)}removeBody(e){this.physics.removeBody(e)}renderRectBody(e){const t=this.ctx,i=e.getPosition(),a={x:s(i.x),y:s(i.y)},n=e.getAngle();t.save(),t.translate(a.x,a.y),t.rotate(n);let o=e.getUserData().render;t.fillStyle=o.fillStyle,t.strokeStyle=o.strokeStyle,t.lineWidth=o.lineWidth;const r=o.width,l=o.height;t.fillRect(-r/2,-l/2,r,l),t.strokeRect(-r/2,-l/2,r,l),t.restore()}renderGround(e){this.ctx;let t=0;switch(this.configManager.gameSize){case"Large":t=144;break;case"Medium":t=72;break;case"Small":t=0}let i=this.imageHandler.getImage("ground");null!=i&&this.ctx.drawImage(i,0,t,this.canvas.width,this.canvas.height)}renderZapZone(e){const t=this.ctx;t.save(),t.strokeStyle="#ff0000",t.lineWidth=2,t.setLineDash([2,6]),t.beginPath(),t.moveTo(p,180),t.lineTo(this.canvas.width-p,180),t.stroke(),t.setLineDash([]),t.restore(),this.renderRectBody(e)}renderBall(e){const t=this.ctx,i=e.getPosition(),a={x:s(i.x),y:s(i.y)},n=e.getAngle();t.save(),t.translate(a.x,a.y),t.rotate(n);let o=e.getUserData().render;t.fillStyle=o.fillStyle,t.strokeStyle=o.strokeStyle,t.lineWidth=o.lineWidth;let r=o.radius;const l=t.lineWidth||0,c=r-l/2;if(c>0){t.save(),t.shadowColor="rgba(255,255,255,0.7)",t.shadowBlur=30;const e=t.createRadialGradient(0,0,0,0,0,c);if(e.addColorStop(0,"#000"),e.addColorStop(1,o.fillStyle),t.fillStyle=e,t.beginPath(),t.arc(0,0,c,0,6.28),t.fill(),t.restore(),t.strokeStyle&&l>0&&t.stroke(),o.showNumber){t.save();const e=Math.max(24,.8*c);t.font=`bold ${e}px Arial`,t.fillStyle="#ffffff",t.textAlign="center",t.textBaseline="middle",t.strokeStyle="#000000",t.lineWidth=2,t.strokeText(o.size.toString(),0,0),t.fillText(o.size.toString(),0,0),t.restore()}}t.restore()}updatePhysics(e){for(this._physicsAccumulator+=e;this._physicsAccumulator>=m;)this.physics.update(m),this._physicsAccumulator-=m,this.clock.stepCount++;this.clock.stepTime=m}renderStatusLine(){this.ctx.save(),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 20px Arial",this.ctx.textAlign="left",this.ctx.textBaseline="top",this.ctx.fillText(`Highest: ${this.scoreHighest}  Score: ${this.score}`,16,6),this.ctx.restore()}renderIcons(){const e=this.canvas.width-32-10,t=this.imageHandler.getImage("cog");t&&this.ctx.drawImage(t,e,0,32,32)}renderScene(){if(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.transitionActive){const e=this.ctx.createLinearGradient(this.canvas.width,0,0,this.canvas.height);e.addColorStop(0,"#007bff"),e.addColorStop(1,"#23d5ab"),this.ctx.fillStyle=e,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(this.transitionCenterX,this.transitionCenterY,this.transitionRadius,0,2*Math.PI),this.ctx.clip()}const e=this.ctx.createLinearGradient(0,0,0,this.canvas.height);e.addColorStop(0,"#00008B"),e.addColorStop(1,"#0000FF"),this.ctx.fillStyle=e,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.laserbeamHandler.render();const t=this.physics.getAllBodies();t.forEach(e=>{switch(e.getUserData().label){case"leftwall":case"rightwall":this.renderRectBody(e);break;case"ground":this.renderGround(e);break;case"zapzone":this.renderZapZone(e)}}),t.forEach(e=>{if("ball"===e.getUserData().label)this.renderBall(e)}),this.particlesHandler.render(),this.renderStatusLine(),this.renderIcons(),this.transitionActive&&this.ctx.restore()}inputTouchAction(e,t,i,s={}){this.gameOver||(i>50?this.ballManager.handleTouchAction(e,t,i,s):t>this.canvas.width-42&&i<42&&"touchstart"===e&&this.doExitDialog())}inputMouseAction(e,t,i,s={}){if(this.gameOver)return;let a=s.leftMouseBut||!1;if(document.getElementById("idCanvasControl").style.cursor="default",i>50)"mousemove"===e&&a&&this.ballManager.handleTouchAction("touchmove",t,i,s),"click"===e&&this.ballManager.handleTouchAction("touchend",t,i,s);else if(t>this.canvas.width-42&&i<42)if("mousemove"===e){const e=document.getElementById("idCanvasControl");e&&(e.style.cursor="pointer")}else(e="click")&&this.doExitDialog()}doExitDialog(){this.showingExitDialog=!0,this.sceneManager.doDialog("Exit Game","Are you sure you want to exit?",["Yes","No"],e=>{this.showingDialog=!1,this.clock.currentTime=performance.now(),"Yes"===e&&(this.exitToMenu=!0)})}inputKeyPressed(e){if(!this.gameOver)switch(e){case"ArrowLeft":this.ballManager.movePlayBall(-1);break;case"ArrowRight":this.ballManager.movePlayBall(1);break;case"ArrowDown":case"Space":this.ballManager.dropPlayBall();break;case"Escape":this.doExitDialog();break;case"Control+KeyX":if(this.configManager.dev){const e=Math.random()<.5?-1:1;this.laserbeamHandler.fire(e)}}}gameOverStep3(){let e="";this.score>this.scoreHighest?(e=`New High Score! ${this.score}  (Previous: ${this.scoreHighest}) <br /><br />`,this.configManager.setHighestScore(`BallsX-${this.configManager.gameSize}`,this.score),this.configManager.saveToLocalStorage()):e=`Your Score: ${this.score}  (High Score to beat: ${this.scoreHighest}) <br /><br />`,this.showingDialog=!0,this.sceneManager.doDialog("Game Over",e+"Would you like to restart or exit?",["Restart","Exit"],e=>{this.showingDialog=!1,"Exit"===e?this.exitToMenu=!0:"Restart"===e&&(this.restartGame=!0)})}gameOverStep2(){this.ballManager.gameOver_BonusBalls();const e=()=>{0===this.ballManager.getBallBodies().length?setTimeout(()=>{this.gameOverStep3()},1e3):setTimeout(e,200)};e()}gameOverStep1(){this.gameOver||(this.gameOver=!0,this.laserbeamHandler.fire(1),this.audioHandler.stopMusic(),this.audioHandler.playSFX("GameOver"),this.ballManager.gameOver_DeadBalls(),setTimeout(()=>{this.gameOverStep2()},2e3))}handleZapZone(e){e.enterZapZone();let t=setTimeout(()=>{this.audioHandler.playSFX("Beep");let t=setTimeout(()=>{e.zapBall&&this.gameOverStep1()},2e3);e.setZapZoneTimerId(t)},2e3);e.setZapZoneTimerId(t)}enter(){this.objectManager.getById("AudioHandler").transitionMusic("GameMusic"),this.ballManager=this.objectManager.register("BallManager",new c(this.objectManager)),this.gameOver=!1}exit(){this.objectManager.getById("AudioHandler").transitionMusic("MenuMusic"),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#111111",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ballManager&&(this.ballManager.destroy(),this.objectManager.deregister(this.ballManager),this.ballManager=null),this.physics&&(this.physics.destroy(),this.objectManager.deregister(this.physics),this.physics=null),this.laserbeamHandler&&(this.laserbeamHandler.destroy(),this.objectManager.deregister(this.laserbeamHandler),this.laserbeamHandler=null),this.particlesHandler&&(this.particlesHandler.destroy(),this.objectManager.deregister(this.particlesHandler),this.particlesHandler=null)}updateFrame(){if(this.exitToMenu)return t.GameScenes.mainmenu;if(this.restartGame)return t.GameScenes.ballsX;if(this.showingDialog)return null;const e=performance.now(),i=this.clock.currentTime;if(this.clock.currentTime=e,this.clock.deltaTime=this.clock.currentTime-i,this.transitionActive){this.transitionRadius+=this.transitionSpeed*(this.clock.deltaTime/1e3);const e=Math.sqrt(Math.pow(this.canvas.width/2,2)+Math.pow(this.canvas.height/2,2));this.transitionRadius>=e&&(this.transitionActive=!1)}return this.updatePhysics(this.clock.deltaTime),this.ballManager.updateFrame(),this.particlesHandler.update(this.clock.deltaTime),this.laserbeamHandler.update(this.clock.deltaTime),this.renderScene(),null}}class f extends t{constructor(e){super(e),this.startTime=null,this.imageHandler=this.objectManager.getById("ImageHandler")}enter(){this.showOverlay(),this.startTime=performance.now(),this.exitFlag=!1,this.audioHandler=this.objectManager.getById("AudioHandler")}exit(){this.hideOverlay()}updateFrame(e){return this.exitFlag?(this.audioHandler.setVolume(this.configManager.masterVolume,this.configManager.musicVolume,this.configManager.sfxVolume),this.audioHandler.playMusic("MenuMusic"),t.GameScenes.mainmenu):null}getSceneStateHtml(){return"\n            <strong>Scene: Splash</strong><br>\n        "}async insertHTMLOverlayContent(){let e=await this.imageHandler.loadImage("images/smiles.png","smiles");const t=document.getElementById("idCanvasOverlay");if(!t)return;const i=window.innerWidth<=900||/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);t.innerHTML=i?`\n                <div style="text-align: center; padding: 10px;">\n                    <img src="${e.src}" alt="Smiles" style="width: 200px; height: auto; margin: 8px auto;"/>\n                    <h1 style="font-size: 28px; font-weight: bold; color: #fff; margin: 8px 0;">OH BALLS MERGE</h1>\n                    <p id="idVersionText" style="font-size: 14px; color: #fff; display: block; margin: 4px 0;">Version 0.001 - 28 Sep 2025</p>\n                    <p id="idLoadingText" style="font-size: 14px; color: #fff; display: none; margin: 4px 0;">Loading...</p>\n                    <button id="idButtonEnter" class="btn btn-primary btn-sm" style="font-size: 16px; margin: 10px 0;">Enter</button>\n                </div>\n            `:`\n                <div style="text-align: center; padding: 40px;">\n                    <img src="${e.src}" alt="Smiles" style="width: 400px; height: auto; margin-top: 20px;"/>\n                    <h1 style="font-size: 72px; font-weight: bold; color: #ffffff;">OH BALLS MERGE</h1>\n                    <p id="idVersionText" style="font-size: 24px; color: #ffffff; display: block;">Version 0.001 - 28 Sep 2025</p>\n                    <p id="idLoadingText" style="font-size: 24px; color: #ffffff; display: none;">Loading...</p>\n                    <button id="idButtonEnter" class="btn btn-primary btn-lg" style="font-size: 32px; margin: 30px 0;">Enter</button>\n                </div>\n            `;document.getElementById("idButtonEnter").onclick=async()=>{await this.doPostUserInteraction()}}async doPostUserInteraction(){document.getElementById("idButtonEnter").style.display="none";document.getElementById("idLoadingText").style.display="block";document.getElementById("idVersionText").style.display="none",await this.audioHandler.waitForPreload(),await this.audioHandler.initialize(),setTimeout(()=>{this.exitFlag=!0},1e3)}inputKeyPressed(e){switch(e){case"Escape":case"Enter":const e=document.getElementById("idButtonEnter");e&&e.click()}}}class M extends t{constructor(e){super(e),this.nextScene=null}enter(){this.showOverlay()}exit(){this.deleteMenuEventListeners(),this.hideOverlay()}doMenuHandler(e){switch(e){case 1:this.nextScene=t.GameScenes.ballsX;break;case 2:this.nextScene=t.GameScenes.settings}}insertHTMLOverlayContent(){const e=document.getElementById("idCanvasOverlay");if(!e)return;let t="";t+='<div class="canvas-overlay-page">',t+='<div><h3 class="overlay-title">Main Menu</h3></div><div>&nbsp;</div>',t+='<div id="idButtonContainer" class="d-grid gap-2">',t+="</div>",t+="<div>&nbsp;</div>",t+="</div>",e.innerHTML='<div class="canvas-overlay-page"><div><h3 class="overlay-title">Main Menu</h3></div><div>&nbsp;</div><div id="idButtonContainer" class="d-grid gap-2"></div><div>&nbsp;</div></div>',this.addMenuButtons(["Start Game","Settings"])}updateFrame(){return this.nextScene}getSceneStateHtml(){return"\n            <strong>Scene: Menu</strong><br>\n        "}getSpecialKeys(){return["Enter","ArrowUp","ArrowDown","Control+KeyP","Control+KeyD"]}}class b extends t{constructor(e){super(e),this.nextScene=null}enter(){this.showOverlay()}exit(){this.deleteMenuEventListeners(),this.hideOverlay()}doMenuHandler(e){switch(e){case 1:this.nextScene=t.GameScenes.mainmenu;break;case 2:this.nextScene=t.GameScenes.settingsaudio;break;case 3:this.nextScene=t.GameScenes.settingsgameplay;break;case 4:this.nextScene=t.GameScenes.settingsdeveloper}}insertHTMLOverlayContent(){const e=document.getElementById("idCanvasOverlay");if(!e)return;let t="";t+='<div class="canvas-overlay-page">',t+='<div><h3 class="overlay-title">Settings</h3></div><div>&nbsp;</div>',t+='<div id="idButtonContainer" class="d-grid gap-2">',t+="</div>",t+="<div>&nbsp;</div>",t+="</div>",e.innerHTML='<div class="canvas-overlay-page"><div><h3 class="overlay-title">Settings</h3></div><div>&nbsp;</div><div id="idButtonContainer" class="d-grid gap-2"></div><div>&nbsp;</div></div>';const i=["Home","Audio","Gameplay"];this.configManager.dev&&i.push("Developer"),this.addMenuButtons(i)}updateFrame(){return this.nextScene}getSceneStateHtml(){return"\n            <strong>Scene: Settings</strong><br>\n        "}inputKeyPressedOther(e){}}class v extends t{constructor(e){super(e),this.audioHandler=e.getById("AudioHandler"),this.nextScene=null}enter(){this.showOverlay()}exit(){this.deleteEventListeners(),this.hideOverlay()}doMenuHandler(e){if(1===e)this.nextScene=t.GameScenes.settings}focusNext(){const e=this._settingsFocusable||[],t=e.indexOf(document.activeElement);t<0||t===e.length-1?e[t]&&e[t].focus():e[t+1].focus()}focusPrev(){const e=this._settingsFocusable||[],t=e.indexOf(document.activeElement);t<=0?e[t]&&e[t].focus():e[t-1].focus()}handleLeft(){const e=document.activeElement;if(e&&"range"===e.type){let t=parseInt(e.value,10);t=Math.max(parseInt(e.min,10),t-parseInt(e.step,10)),e.value=t,e.dispatchEvent(new Event("input"))}else"idAudio"===e.id&&(document.getElementById("idAudio").checked=!1)}handleRight(){const e=document.activeElement;if(e&&"range"===e.type){let t=parseInt(e.value,10);t=Math.min(parseInt(e.max,10),t+parseInt(e.step,10)),e.value=t,e.dispatchEvent(new Event("input"))}else"idAudio"===e.id&&(document.getElementById("idAudio").checked=!0)}insertHTMLOverlayContent(){const e=document.getElementById("idCanvasOverlay");if(!e)return;let t="";t+='<div class="canvas-overlay-page">',t+='<div><h3 class="overlay-title">Audio Settings</h3></div><div>&nbsp;</div>',t+='<div id="idButtonContainer" class="d-grid gap-2">',t+="</div>",t+='<div id="idSettingsPanel" class="settings-panel" role="region">',t+="</div>",t+="</div>",e.innerHTML=t;const i=document.getElementById("idSettingsPanel");if(!i)return;const s=this.configManager.masterVolume,a=this.configManager.musicVolume,n=this.configManager.sfxVolume;t="",t=`\n            <form>\n                <div class="mb-3 form-check form-switch">\n                    <input class="form-check-input" type="checkbox" role="switch" id="idAudio" ${this.configManager.audioEnabled?"checked":""} data-idx="1" tabindex="0">\n                    <label class="form-check-label" for="idAudio">Audio</label>\n                </div>\n\n                <div class="volume-control">\n                    <label for="idMasterVolume" class="form-label">Master Volume:</label>\n                    <input type="range" class="form-range" min="0" max="100" step="10" value="${s}" id="idMasterVolume" data-config-key="masterVolume" tabindex="0">\n                    <span id="idMasterVolumeValue" class="volume-value">${s}</span>\n                </div>\n\n                <div class="volume-control">\n                    <label for="idMusicVolume" class="form-label">Music Volume:</label>\n                    <input type="range" class="form-range" min="0" max="100" step="10" value="${a}" id="idMusicVolume" data-config-key="musicVolume" tabindex="0">\n                    <span id="idMusicVolumeValue" class="volume-value">${a}</span>\n                </div>\n\n                <div class="volume-control">\n                    <label for="idSfxVolume" class="form-label">SFX Volume:</label>\n                    <input type="range" class="form-range" min="0" max="100" step="10" value="${n}" id="idSfxVolume" data-config-key="sfxVolume" tabindex="0">\n                    <span id="idSfxVolumeValue" class="volume-value">${n}</span>\n                </div>\n\n                <button id="idSaveSettings" type="button" class="btn btn-primary" data-idx="3" tabindex="0">Save</button>\n            </form>\n        `,i.innerHTML=t,setTimeout(()=>{this._boundSaveSettings=this.saveSettings.bind(this),document.getElementById("idSaveSettings").addEventListener("click",this._boundSaveSettings);const e=document.getElementById("idAudio");e&&e.focus();const t=i.querySelectorAll("input, select, textarea, button");this._settingsFocusable=Array.from(t),document.querySelectorAll('input[type="range"]').forEach(e=>{const t=getComputedStyle(document.documentElement),i=t.getPropertyValue("--bs-primary")?.trim()||"#007bff",s=t.getPropertyValue("--bs-light")?.trim()||"rgba(255,255,255,0.85)",a=document.getElementById(`${e.id}Value`),n=e=>{const t=Number(e.value||0),n=Number(e.min||0),o=Number(e.max||100)-n||1,r=Math.round((t-n)/o*100);e.style.background=`linear-gradient(to right, ${i} 0%, ${i} ${r}%, ${s} ${r}%, ${s} 100%)`,a&&(a.textContent=t)};n(e),e.addEventListener("input",()=>n(e))})},5)}saveSettings(e){e.preventDefault();const i=document.getElementById("idAudio").checked;this.configManager.audioEnabled=i,document.querySelectorAll('input[type="range"]').forEach(e=>{const t=e.dataset.configKey;t&&(this.configManager[t]=parseInt(e.value,10))}),this.configManager.saveToLocalStorage(),this.audioHandler.updateAudioNewSettings(),this.sceneManager.doToast("Audio Settings","Settings updated."),this.nextScene=t.GameScenes.settings}deleteEventListeners(){const e=document.getElementById("idSaveSettings");e&&this._boundSaveSettings&&(e.removeEventListener("click",this._boundSaveSettings),this._boundSaveSettings=null)}updateFrame(){return this.nextScene}getSceneStateHtml(){return"\n            <strong>Scene: Audio Settings</strong><br>\n        "}setupEventHandlers(){}getSpecialKeys(){return["Escape","ArrowUp","ArrowDown","Control+KeyD","Control+KeyP"]}inputKeyPressedOther(e){switch(e){case"Escape":this.nextScene=t.GameScenes.settings;break;case"ArrowDown":this.focusNext();break;case"ArrowUp":this.focusPrev();break;case"ArrowLeft":this.handleLeft();break;case"ArrowRight":this.handleRight();break;case"Enter":let e=document.activeElement;e&&e.click()}}}class x extends t{constructor(e){super(e),this.nextScene=null}enter(){this.showOverlay()}exit(){this.deleteEventListeners(),this.hideOverlay()}doMenuHandler(e){if(1===e)this.nextScene=t.GameScenes.settings}focusNext(){const e=this._settingsFocusable||[],t=e.indexOf(document.activeElement);t<0||t===e.length-1?e[t]&&e[t].focus():e[t+1].focus()}focusPrev(){const e=this._settingsFocusable||[],t=e.indexOf(document.activeElement);t<=0?e[t]&&e[t].focus():e[t-1].focus()}handleLeft(){let e=0;switch(document.activeElement.id){case"idGameplay":e=document.getElementById("idGameplay").selectedIndex,e=Math.max(0,e-1),document.getElementById("idGameplay").selectedIndex=e;break;case"idGameSize":e=document.getElementById("idGameSize").selectedIndex,e=Math.max(0,e-1),document.getElementById("idGameSize").selectedIndex=e}}handleRight(){let e=0,t=0;switch(document.activeElement.id){case"idGameplay":t=document.getElementById("idGameplay").options.length,e=document.getElementById("idGameplay").selectedIndex,e=Math.min(t-1,e+1),document.getElementById("idGameplay").selectedIndex=e;break;case"idGameSize":t=document.getElementById("idGameSize").options.length,e=document.getElementById("idGameSize").selectedIndex,e=Math.min(t-1,e+1),document.getElementById("idGameSize").selectedIndex=e}}insertHTMLOverlayContent(){const e=document.getElementById("idCanvasOverlay");if(!e)return;let t="";t+='<div class="canvas-overlay-page">',t+='<div><h3 class="overlay-title">Gameplay Settings</h3></div><div>&nbsp;</div>',t+='<div id="idButtonContainer" class="d-grid gap-2">',t+="</div>",t+='<div id="idSettingsPanel" class="settings-panel" role="region">',t+="</div>",t+="</div>",e.innerHTML=t;const i=document.getElementById("idSettingsPanel");if(!i)return;const s=this.configManager.theme,a=this.configManager.gameSize;t="",t='\n            <form>\n                <div class="mb-3">\n                    <label for="idGameplay" class="form-label">Theme: </label>\n                    <select class="form-select" id="idGameplay">\n                        <option value="Default">Default</option>\n                        <option value="One">One</option>\n                        <option value="Two">Two</option>\n                        <option value="Three">Three</option>\n                    </select>\n                </div>\n\n                <div class="mb-3">\n                    <label for="idGameSize" class="form-label">Game Size: </label>\n                    <select class="form-select" id="idGameSize">\n                        <option value="Large">Large</option>\n                        <option value="Medium">Medium</option>\n                        <option value="Small">Small</option>\n                    </select>\n                </div>\n\n                <button id="idSaveSettings" type="button" class="btn btn-primary">Save</button>\n            </form>\n        ',i.innerHTML=t,setTimeout(()=>{this._boundSaveSettings=this.saveSettings.bind(this),document.getElementById("idSaveSettings").addEventListener("click",this._boundSaveSettings);const e=document.getElementById("idGameplay");if(e){for(let t=0;t<e.options.length;t++)if(e.options[t].value===s){e.selectedIndex=t;break}e.focus()}const t=document.getElementById("idGameSize");if(t)for(let i=0;i<t.options.length;i++)if(t.options[i].value===a){t.selectedIndex=i;break}const n=i.querySelectorAll("input, select, textarea, button");this._settingsFocusable=Array.from(n)},5)}saveSettings(e){e.preventDefault();const i=document.getElementById("idGameplay").value;this.configManager.theme=i;const s=document.getElementById("idGameSize").value;this.configManager.gameSize=s,this.configManager.saveToLocalStorage(),this.sceneManager.doToast("Theme Settings","Settings updated."),this.nextScene=t.GameScenes.settings}deleteEventListeners(){const e=document.getElementById("idSaveSettings");e&&this._boundSaveSettings&&(e.removeEventListener("click",this._boundSaveSettings),this._boundSaveSettings=null)}updateFrame(){return this.nextScene}getSceneStateHtml(){return"\n            <strong>Scene: Gameplay Settings</strong><br>\n        "}setupEventHandlers(){}getSpecialKeys(){return["Escape","ArrowUp","ArrowDown","Control+KeyD","Control+KeyP"]}inputKeyPressedOther(e){switch(e){case"Escape":this.nextScene=t.GameScenes.settings;break;case"ArrowDown":this.focusNext();break;case"ArrowUp":this.focusPrev();break;case"ArrowLeft":this.handleLeft();break;case"ArrowRight":this.handleRight();break;case"Enter":let e=document.activeElement;e&&e.click()}}}class S extends t{constructor(e){super(e),this.nextScene=null}enter(){this.showOverlay()}exit(){this.deleteEventListeners(),this.hideOverlay()}doMenuHandler(e){if(1===e)this.nextScene=t.GameScenes.settings}focusNext(){const e=this._settingsFocusable||[],t=e.indexOf(document.activeElement);t<0||t===e.length-1?e[t]&&e[t].focus():e[t+1].focus()}focusPrev(){const e=this._settingsFocusable||[],t=e.indexOf(document.activeElement);t<=0?e[t]&&e[t].focus():e[t-1].focus()}handleLeft(){}handleRight(){}insertHTMLOverlayContent(){const e=document.getElementById("idCanvasOverlay");if(!e)return;let t="";t+='<div class="canvas-overlay-page">',t+='<div><h3 class="overlay-title">Developer Settings</h3></div><div>&nbsp;</div>',t+='<div id="idButtonContainer" class="d-grid gap-2">',t+="</div>",t+='<div id="idSettingsPanel" class="settings-panel" role="region">',t+="</div>",t+="</div>",e.innerHTML=t;const i=document.getElementById("idSettingsPanel");i&&(this.configManager.theme,this.configManager.GameSize,t="",t='\n            <form>\n                <button id="idSaveSettings" type="button" class="btn btn-primary">Save</button>\n            </form>\n        ',i.innerHTML=t,setTimeout(()=>{this._boundSaveSettings=this.saveSettings.bind(this),document.getElementById("idSaveSettings").addEventListener("click",this._boundSaveSettings);const e=i.querySelectorAll("input, select, textarea, button");this._settingsFocusable=Array.from(e)},5))}saveSettings(e){e.preventDefault(),this.configManager.saveToLocalStorage(),this.sceneManager.doToast("Developer Settings","Settings updated."),this.nextScene=t.GameScenes.settings}deleteEventListeners(){const e=document.getElementById("idSaveSettings");e&&this._boundSaveSettings&&(e.removeEventListener("click",this._boundSaveSettings),this._boundSaveSettings=null)}updateFrame(){return this.nextScene}getSceneStateHtml(){return"\n            <strong>Scene: Developer Settings</strong><br>\n        "}setupEventHandlers(){}getSpecialKeys(){return["Escape","Control+KeyP","Control+KeyD"]}inputKeyPressedOther(e){switch(e){case"Escape":this.nextScene=t.GameScenes.settings;break;case"ArrowDown":this.focusNext();break;case"ArrowUp":this.focusPrev();break;case"ArrowLeft":this.handleLeft();break;case"ArrowRight":this.handleRight();break;case"Enter":let e=document.activeElement;e&&e.click()}}}class B{constructor(e){this.objectManager=e,this.canvas=e.getById("Main").canvas,this.configManager=e.getById("ConfigManager"),this.audioManager=e.getById("AudioHandler"),this.ctx=this.canvas.getContext("2d"),this.dialogEnabled=!1,this.dialogButtonsCount=0,this.overlayEnabled=!1,this.currentSceneKey=null,this.currentScene=null,this.devcnt=0}setCurrentScene(e){switch(this.currentScene&&(this.currentScene.exit(),this.objectManager.deregister(this.currentScene),this.currentScene=null),e){case t.GameScenes.splash:this.currentScene=this.objectManager.register("SceneSplash",new f(this.objectManager));break;case t.GameScenes.mainmenu:this.currentScene=this.objectManager.register("SceneMainmenu",new M(this.objectManager));break;case t.GameScenes.ballsX:this.currentScene=this.objectManager.register("SceneBallsX",new y(this.objectManager));break;case t.GameScenes.settings:this.currentScene=this.objectManager.register("SceneSettings",new b(this.objectManager));break;case t.GameScenes.settingsaudio:this.currentScene=this.objectManager.register("SceneSettingsAudio",new v(this.objectManager));break;case t.GameScenes.settingsgameplay:this.currentScene=this.objectManager.register("SceneSettingsGameplay",new x(this.objectManager));break;case t.GameScenes.settingsdeveloper:this.currentScene=this.objectManager.register("SceneSettingsDeveloper",new S(this.objectManager));break;default:alert("Unknown scene key: "+e)}this.currentSceneKey=e,this.currentScene.enter()}getSceneStateHtml(){let e="";return this.currentScene&&"function"==typeof this.currentScene.getSceneStateHtml&&(e=this.currentScene.getSceneStateHtml()),e}setupEventHandlers(){}start(){this.diagnosticsPanel=this.objectManager.register("DiagnosticPanel",new e(this.objectManager)),this.setCurrentScene(t.GameScenes.splash)}destroy(){this.currentScene.exit(),this.currentScene=null,this.diagnosticsPanel=null}getSpecialKeys(){return this.currentScene.getSpecialKeys()}inputTouchAction(e,t,i,s={}){this.currentScene.inputTouchAction(e,t,i,s)}inputMouseAction(e,t,i,s={}){this.currentScene.inputMouseAction(e,t,i,s)}inputKeyPressed(e){if(this.dialogEnabled)this.doDialogInputKeyPressed(e);else switch(e){case"Control+KeyP":this.configManager.dev&&this.diagnosticsPanel.toggle();break;case"Control+KeyD":this.devcnt+=1,3===this.devcnt&&(this.configManager.dev=!this.configManager.dev,this.configManager.saveToLocalStorage(),this.devcnt=0,this.doToast("Developer Mode: ",this.configManager.dev?"Enabled":"Disabled"));break;default:this.currentScene.inputKeyPressed(e)}}updateFrame(){const e=this.currentScene.updateFrame();null!==e&&this.setCurrentScene(e),this.diagnosticsPanel.renderPanel()}doToast(e,t="",i="info"){var s="",a="idToast-"+Math.floor(performance.now()),n=(new Date).toLocaleTimeString();const o={success:{icon:"âœ“",borderColor:"#28a745"},warning:{icon:"âš ",borderColor:"#ffc107"},error:{icon:"âœ•",borderColor:"#dc3545"},info:{icon:"i",borderColor:"#17a2b8"}},r=o[i]||o.info;s+="<div id='"+a+"' class='custom-toast' style='background-color: rgba(255, 255, 255, 1) !important;border-left: 6px solid "+r.borderColor+"; border-radius: 8px; box-shadow: none !important; margin-bottom: 10px; max-width: 400px; padding: 16px; display: block !important; visibility: visible !important;'>",s+="<div style='display: flex; align-items: flex-start; gap: 12px;'>",s+="<div style='display: flex; align-items: center; justify-content: center; width: 24px; height: 24px; border-radius: 50%; background-color: "+r.borderColor+"; color: white; font-weight: bold; font-size: 14px; flex-shrink: 0; margin-top: 2px;'>"+r.icon+"</div>",s+="<div style='flex: 1; min-width: 0;'>",s+="<div style='font-weight: 600; color: black; font-size: 15px; margin-bottom: "+(t?"4px":"0")+";'>"+e+"</div>",t&&(s+="<div style='color: black; font-size: 14px; line-height: 1.4; opacity: 0.8;'>"+t+"</div>"),s+="</div>",s+="<div style='display: flex; align-items: flex-start; gap: 8px; flex-shrink: 0;'>",s+="<small style='color: black; opacity: 0.6; font-size: 12px; margin-top: 2px;'>"+n+"</small>",s+="<button type='button' class='btn-close' onclick='this.closest(\".custom-toast\").remove()' style='color: black; opacity: 0.5; font-size: 18px; border: none; background: none; cursor: pointer; padding: 0; width: 16px; height: 16px;'>Ã—</button>",s+="</div></div></div>";const l=document.getElementById("idToaster");if(l){l.insertAdjacentHTML("beforeend",s);const e=document.getElementById(a);if(e){const t=e=>{e.currentTarget.removeEventListener("hidden.bs.toast",t),e.currentTarget.remove()};e.addEventListener("hidden.bs.toast",t),e.style.display="block",setTimeout(()=>{e&&e.parentNode&&e.remove()},5e3)}}}doDialog(e,t,i,s){const a=document.getElementById("idCanvasDialog");if(a.innerHTML="",e){const t=document.createElement("h5");t.textContent=e,a.appendChild(t)}if(t){const e=document.createElement("p");e.innerHTML=t,a.appendChild(e)}const n=document.createElement("div");n.className="d-flex justify-content-center gap-2",i.forEach((e,t)=>{const i=document.createElement("button");i.id=`idDialogButton_${t+1}`,i.dataset.idx=String(t+1),i.className="btn btn-primary",i.textContent=e,i.onclick=()=>{document.getElementById("idCanvasBackdrop").style.display="none",document.getElementById("idCanvasDialog").style.display="none",s&&s(i.textContent),this.dialogEnabled=!1},n.appendChild(i)}),a.appendChild(n),this.dialogEnabled=!0,this.dialogButtonsCount=i.length,document.getElementById("idCanvasBackdrop").style.display="block",document.getElementById("idCanvasDialog").style.display="block",this.doDialogSetFocus(1)}doDialogSetFocus(e){const t=document.getElementById(`idDialogButton_${e}`);t&&t.focus()}doDialogInputKeyPressed(e){if(!this.dialogEnabled)return;const t=document.activeElement;let i=t?Number(t.dataset.idx):0;switch(e){case"ArrowUp":case"ArrowLeft":i>1&&this.doDialogSetFocus(i-1);break;case"ArrowDown":case"ArrowRight":i<this.dialogButtonsCount&&this.doDialogSetFocus(i+1);break;case"Enter":t.click()}}doShowOverlay(){const e=document.getElementById("idCanvasOverlay");e&&(e.style.display="block",this.overlayEnabled=!0)}doHideOverlay(){const e=document.getElementById("idCanvasOverlay");e&&(e.style.display="none",this.overlayEnabled=!1)}}class w{constructor(e){this.objectManager=e,this.sceneManager=this.objectManager.getById("SceneManager"),this.keyState={},this.gamepadState={},this.leftMouseBut=!1,this.setupEventListeners()}setupEventListeners(){document.addEventListener("keyup",e=>this.handleKeyUp(e)),document.addEventListener("keydown",e=>this.handleKeyDown(e));const e=document.getElementById("idCanvasControl");e&&(e.addEventListener("touchstart",e=>this.handleTouchStart(e),{passive:!1}),e.addEventListener("touchmove",e=>this.handleTouchMove(e),{passive:!1}),e.addEventListener("touchend",e=>this.handleTouchEnd(e),{passive:!1}),e.addEventListener("click",e=>this.handleMouseClick(e),!1),e.addEventListener("mousemove",e=>this.handleMouseMove(e),!1),e.addEventListener("mouseenter",e=>this.handleMouseEnter(e),!1),e.addEventListener("mousedown",e=>this.handleMouseDown(e),!1),e.addEventListener("mouseup",e=>this.handleMouseUp(e),!1))}getCanvasCoordinates(e,t,i){const s=e.target,a=s.getBoundingClientRect(),n=a.width,o=a.height,r=s.width/n,l=s.height/o;return{x:(t-a.left)*r,y:(i-a.top)*l}}handleMouseMove(e){if(this.sceneManager.dialogEnabled||this.sceneManager.overlayEnabled)return;const t=this.getCanvasCoordinates(e,e.clientX,e.clientY);this.sceneManager.inputMouseAction("mousemove",t.x,t.y,{leftMouseBut:this.leftMouseBut})}handleMouseEnter(e){this.leftMouseBut=!1}handleMouseDown(e){0===e.button&&(this.leftMouseBut=!0)}handleMouseUp(e){0===e.button&&(this.leftMouseBut=!1)}handleMouseClick(e){if(this.sceneManager.dialogEnabled||this.sceneManager.overlayEnabled)return;const t=this.getCanvasCoordinates(e,e.clientX,e.clientY);this.sceneManager.inputMouseAction("click",t.x,t.y,{leftMouseBut:this.leftMouseBut})}handleTouchStart(e){if(!this.sceneManager.dialogEnabled&&!this.sceneManager.overlayEnabled&&(e.preventDefault(),e.touches&&1===e.touches.length)){const t=e.touches[0],i=this.getCanvasCoordinates(e,t.clientX,t.clientY);this.sceneManager.inputTouchAction("touchstart",i.x,i.y)}}handleTouchMove(e){if(!this.sceneManager.dialogEnabled&&!this.sceneManager.overlayEnabled&&(e.preventDefault(),e.touches&&1===e.touches.length)){const t=e.touches[0],i=this.getCanvasCoordinates(e,t.clientX,t.clientY);this.sceneManager.inputTouchAction("touchmove",i.x,i.y)}}handleTouchEnd(e){if(!this.sceneManager.dialogEnabled&&!this.sceneManager.overlayEnabled&&(e.preventDefault(),e.changedTouches&&1===e.changedTouches.length)){const t=e.changedTouches[0],i=this.getCanvasCoordinates(e,t.clientX,t.clientY);this.sceneManager.inputTouchAction("touchend",i.x,i.y)}}buildKeyId(e){const t=[];return e.ctrlKey&&t.push("Control"),e.shiftKey&&t.push("Shift"),e.altKey&&t.push("Alt"),e.metaKey&&t.push("Meta"),t.push(e.code),t.join("+")}handleKeyDownOverlay(e){const t=this.buildKeyId(e),i=e.code;this.sceneManager.getSpecialKeys().includes(t)&&(e.preventDefault(),this.keyState[i]||(this.keyState[i]=!0,this.sceneManager.inputKeyPressed(t)))}handleKeyDownDialog(e){const t=this.buildKeyId(e),i=e.code;["ArrowLeft","ArrowRight","ArrowUp","ArrowDown"].includes(t)&&e.preventDefault(),this.keyState[i]||(this.keyState[i]=!0,this.sceneManager.doDialogInputKeyPressed(t))}handleKeyDownCanvas(e){const t=this.buildKeyId(e),i=e.code;["ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Space","Enter","Escape","Control+KeyD","Control+KeyP","Control+KeyX"].includes(t)&&e.preventDefault(),"ArrowLeft"!==e.code&&"ArrowRight"!==e.code&&"KeyA"!==e.code&&"KeyD"!==e.code?this.keyState[i]||(this.keyState[i]=!0,this.sceneManager.inputKeyPressed(t)):this.keyState[i]=!0}handleKeyDown(e){const t=this.sceneManager.dialogEnabled,i=this.sceneManager.overlayEnabled;t?this.handleKeyDownDialog(e):i?this.handleKeyDownOverlay(e):this.handleKeyDownCanvas(e)}handleKeyUp(e){const t=e.code;this.keyState[t]=!1}getInput(){if(!this.sceneManager)return;const e=this.sceneManager.dialogEnabled;this.sceneManager.overlayEnabled||e||(this.keyState.ArrowLeft||this.keyState.KeyA?this.sceneManager.inputKeyPressed("ArrowLeft"):(this.keyState.ArrowRight||this.keyState.KeyD)&&this.sceneManager.inputKeyPressed("ArrowRight")),this.pollGamepad()}pollGamepad(){const e=(e,s)=>{const a=i[e];t.buttons[a]?.pressed?this.gamepadState[e]||(this.gamepadState[e]=!0,s()):this.gamepadState[e]=!1},t=(navigator.getGamepads?navigator.getGamepads():[])[0];if(!t)return;const i={"Button A":0,"Button B":1,"Button X":2,"Button Y":3,"Left Bumper":4,"Right Bumper":5,"Left Trigger":6,"Right Trigger":7,"Button Back":8,"Button Start":9,"Button Left Stick":10,"Button Right Stick":11,"D-pad Up":12,"D-pad Down":13,"D-pad Left":14,"D-pad Right":15,"Home / Guide / PS":16},s=this.sceneManager.dialogEnabled,a=this.sceneManager.overlayEnabled,n=!(s||a),o=t.axes[0]||0;o<-.3?this.sceneManager.inputKeyPressed("ArrowLeft"):o>.3&&this.sceneManager.inputKeyPressed("ArrowRight"),e("D-pad Up",()=>{this.sceneManager.inputKeyPressed("ArrowUp")}),e("D-pad Down",()=>{this.sceneManager.inputKeyPressed(n?"Space":"ArrowDown")}),e("D-pad Left",()=>{this.sceneManager.inputKeyPressed("ArrowLeft"),n&&(this.gamepadState["D-pad Left"]=!1)}),e("D-pad Right",()=>{this.sceneManager.inputKeyPressed("ArrowRight"),n&&(this.gamepadState["D-pad Right"]=!1)}),e("Button A",()=>{this.sceneManager.inputKeyPressed(n?"Space":"Enter")}),e("Button B",()=>{this.sceneManager.inputKeyPressed("Escape")})}destroy(){document.removeEventListener("keydown",this.handleKeyDown),document.removeEventListener("keyup",this.handleKeyUp)}}class k{constructor(e){this._config={AudioEnabled:!0,MasterVolume:80,MusicVolume:80,SfxVolume:80,Theme:"default",UserName:"",UserId:"",GameSize:"Large",Dev:!1,HighestScores:[]},this.objectHandler=e,this.loadFromLocalStorage()}setHighestScore(e,t){if(!e)return;t=Number(t)||0;const i=this._config.HighestScores.findIndex(t=>t.GameType===e);i>=0?this._config.HighestScores[i].Score=t:this._config.HighestScores.push({GameType:e,Score:t})}getHighestScore(e){if(!e)return 0;const t=this._config.HighestScores.find(t=>t.GameType===e);return t?t.Score:0}get audioEnabled(){return this._config.AudioEnabled}set audioEnabled(e){this._config.AudioEnabled=Boolean(e)}get masterVolume(){return this._config.MasterVolume}set masterVolume(e){const t=Math.max(0,Math.min(100,parseInt(e,10)||0));this._config.MasterVolume=t}get musicVolume(){return this._config.MusicVolume}set musicVolume(e){const t=Math.max(0,Math.min(100,parseInt(e,10)||0));this._config.MusicVolume=t}get sfxVolume(){return this._config.SfxVolume}set sfxVolume(e){const t=Math.max(0,Math.min(100,parseInt(e,10)||0));this._config.SfxVolume=t}get theme(){return this._config.Theme}set theme(e){this._config.Theme=String(e)}get userName(){return this._config.UserName}set userName(e){this._config.UserName=String(e)}get userId(){return this._config.UserId}set userId(e){this._config.UserId=String(e)}get gameSize(){return this._config.GameSize}set gameSize(e){["Small","Medium","Large"].includes(e)?this._config.GameSize=e:this._config.GameSize="Large"}get dev(){return this._config.Dev}set dev(e){this._config.Dev=Boolean(e)}serialize(){return JSON.stringify(this._config)}deserialize(e){try{const t=JSON.parse(e);t.hasOwnProperty("AudioEnabled")&&(this.audioEnabled=t.AudioEnabled),t.hasOwnProperty("MasterVolume")&&(this.masterVolume=t.MasterVolume),t.hasOwnProperty("MusicVolume")&&(this.musicVolume=t.MusicVolume),t.hasOwnProperty("SfxVolume")&&(this.sfxVolume=t.SfxVolume),t.hasOwnProperty("Theme")&&(this.theme=t.Theme),t.hasOwnProperty("UserName")&&(this.userName=t.UserName),t.hasOwnProperty("UserId")&&(this.userId=t.UserId),t.hasOwnProperty("GameSize")&&(this.gameSize=t.GameSize),t.hasOwnProperty("Dev")&&(this.dev=t.Dev),Array.isArray(t.HighestScores)&&(this._config.HighestScores=t.HighestScores.map(e=>({GameType:String(e.GameType),Score:Number(e.Score)||0})))}catch(t){throw new Error("Invalid JSON string provided for deserialization: "+t.message)}}getAll(){return{...this._config}}reset(){this._config={AudioEnabled:!0,MasterVolume:80,MusicVolume:80,SfxVolume:80,Theme:"default",UserName:"",UserId:"",GameSize:"Large",Dev:!1,HighestScores:[]}}saveToLocalStorage(e="oh-balls-merge-config"){localStorage.setItem(e,this.serialize())}loadFromLocalStorage(e="oh-balls-merge-config"){const t=localStorage.getItem(e);return!!t&&(this.deserialize(t),!0)}}class E{constructor(){this.audioContext=null,this.masterGain=null,this.musicGain=null,this.sfxGain=null,this.volumes={master:100,music:100,sfx:100},this.audioBuffers=new Map,this.preloadedAudioData=new Map,this.activeSources=new Set,this.activeMusicSources=new Set,this.currentMusic=null,this.isMusicPaused=!1,this.musicStartTime=0,this.musicPauseTime=0,this.isInitialized=!1}async initialize(){try{return this.audioContext=new(window.AudioContext||window.webkitAudioContext),"suspended"===this.audioContext.state&&await this.audioContext.resume(),this.masterGain=this.audioContext.createGain(),this.musicGain=this.audioContext.createGain(),this.sfxGain=this.audioContext.createGain(),this.musicGain.connect(this.masterGain),this.sfxGain.connect(this.masterGain),this.masterGain.connect(this.audioContext.destination),this.updateVolumes(),this.isInitialized=!0,!0}catch(e){return alert(`AudioMark initialization failed: ${e.message}`),!1}}async loadAudio(e,t){if(!this.isInitialized)return alert("AudioMark not initialized. Call initialize() first."),!1;try{let i;if(t instanceof ArrayBuffer)i=t;else if(t instanceof File)i=await t.arrayBuffer();else{const e=await fetch(t);if(!e.ok)throw new Error(`Failed to fetch audio: ${e.statusText}`);i=await e.arrayBuffer()}const s=await this.audioContext.decodeAudioData(i);return this.audioBuffers.set(e,s),!0}catch(i){return alert(`Failed to load audio "${e}": ${i.message}`),!1}}async loadFromArrayBuffer(e,t){if(!this.isInitialized)return alert("AudioMark not initialized. Call initialize() first."),!1;if(!(t instanceof ArrayBuffer))return alert("loadFromArrayBuffer requires an ArrayBuffer as input."),!1;try{const i=await this.audioContext.decodeAudioData(t);return this.audioBuffers.set(e,i),!0}catch(i){return alert(`Failed to load audio from ArrayBuffer "${e}": ${i.message}`),!1}}async preloadAudio(e,t){try{let i;if(t instanceof File)i=await t.arrayBuffer();else{const e=await fetch(t);if(!e.ok)throw new Error(`Failed to fetch audio: ${e.statusText}`);i=await e.arrayBuffer()}return this.preloadedAudioData.set(e,i),!0}catch(i){return alert(`Failed to preload audio "${e}": ${i.message}`),!1}}async processPreloadedAudio(e){if(!this.isInitialized)return alert("AudioMark not initialized. Call initialize() first."),!1;const t=this.preloadedAudioData.get(e);if(!t)return alert(`No preloaded audio data found for "${e}".`),!1;try{const i=await this.audioContext.decodeAudioData(t);return this.audioBuffers.set(e,i),this.preloadedAudioData.delete(e),!0}catch(i){return alert(`Failed to process preloaded audio "${e}": ${i.message}`),!1}}async processAllPreloadedAudio(){if(!this.isInitialized)return alert("AudioMark not initialized. Call initialize() first."),!1;const e=Array.from(this.preloadedAudioData.keys()),t=[];for(const i of e){const e=await this.processPreloadedAudio(i);t.push({name:i,success:e})}return t}unloadAudio(e){let t=!1;return this.audioBuffers.has(e)&&(this.audioBuffers.delete(e),t=!0),this.preloadedAudioData.has(e)&&(this.preloadedAudioData.delete(e),t=!0),t}playSFX(e,t={}){const{loop:i=!1,volume:s=1,fadeIn:a=0}=t;return this._playAudio(e,this.sfxGain,{loop:i,volume:s,fadeIn:a,type:"sfx"})}playMusic(e,t={}){const{loop:i=!0,volume:s=1,fadeIn:a=0,stopCurrent:n=!0}=t;n&&this.currentMusic&&this.stopMusic();const o=this._playAudio(e,this.musicGain,{loop:i,volume:s,fadeIn:a,type:"music"});return o&&(this.currentMusic={source:o,name:e,startTime:this.audioContext.currentTime,loop:i},this.isMusicPaused=!1,this.activeMusicSources.add(o)),o}_playAudio(e,t,i){if(!this.isInitialized)return alert("AudioMark not initialized."),null;const s=this.audioBuffers.get(e);if(!s)return alert(`Audio "${e}" not loaded.`),null;try{const e=this.audioContext.createBufferSource();e.buffer=s,e.loop=i.loop;const a=this.audioContext.createGain();return e.connect(a),a.connect(t),a.gain.setValueAtTime(i.volume,this.audioContext.currentTime),i.fadeIn>0&&(a.gain.setValueAtTime(0,this.audioContext.currentTime),a.gain.linearRampToValueAtTime(i.volume,this.audioContext.currentTime+i.fadeIn)),this.activeSources.add(e),e.onended=()=>{this.activeSources.delete(e),"music"===i.type&&(this.activeMusicSources.delete(e),this.currentMusic&&this.currentMusic.source===e&&(this.currentMusic=null))},e.start(0),e}catch(a){return alert(`Failed to play audio "${e}": ${a.message}`),null}}stopMusic(){this.activeMusicSources.forEach(e=>{try{e.stop()}catch(t){}}),this.activeMusicSources.clear(),this.currentMusic=null,this.isMusicPaused=!1}pauseMusic(){if(this.currentMusic&&!this.isMusicPaused){if(this.musicPauseTime=this.audioContext.currentTime,this.currentMusic.source){try{this.currentMusic.source.stop()}catch(e){}this.activeSources.delete(this.currentMusic.source),this.activeMusicSources.delete(this.currentMusic.source),this.currentMusic.source=null}return this.isMusicPaused=!0,!0}return!1}resumeMusic(){if(this.currentMusic&&this.isMusicPaused){const e=this.musicPauseTime-this.currentMusic.startTime,t=this.audioBuffers.get(this.currentMusic.name);if(t){const i=this.audioContext.createBufferSource();i.buffer=t,i.loop=this.currentMusic.loop,i.connect(this.musicGain);const s=this.currentMusic.loop?e%t.duration:e;return i.start(0,Math.max(0,s)),this.currentMusic.source=i,this.currentMusic.startTime=this.audioContext.currentTime-e,this.activeMusicSources.add(i),this.activeSources.add(i),i.onended=()=>{this.activeSources.delete(i),this.activeMusicSources.delete(i),this.currentMusic&&this.currentMusic.source===i&&(this.currentMusic=null,this.isMusicPaused=!1)},this.isMusicPaused=!1,!0}}return!1}stopAll(){this.activeSources.forEach(e=>{try{e.stop()}catch(t){}}),this.activeSources.clear(),this.activeMusicSources.clear(),this.currentMusic=null,this.isMusicPaused=!1}setVolume(e,t){t=Math.max(0,Math.min(100,t)),this.volumes[e]=t,this.updateVolumes()}getVolume(e){return this.volumes[e]}updateVolumes(){if(!this.isInitialized)return;const e=this.volumes.master/100,t=this.volumes.music/100*e,i=this.volumes.sfx/100*e;this.masterGain.gain.setValueAtTime(e,this.audioContext.currentTime),this.musicGain.gain.setValueAtTime(t,this.audioContext.currentTime),this.sfxGain.gain.setValueAtTime(i,this.audioContext.currentTime)}fadeOut(e,t=1){if(e&&this.isInitialized)try{const i=this.audioContext.currentTime,s=e.connect?this.audioContext.createGain():null;s&&(e.disconnect(),e.connect(s),s.connect(this.musicGain),s.gain.setValueAtTime(1,i),s.gain.linearRampToValueAtTime(0,i+t),setTimeout(()=>{try{e.stop()}catch(t){}},1e3*t))}catch(i){alert(`Fade out error: ${i.message}`)}}async transitionMusic(e,t=2,i={}){if(!this.audioBuffers.has(e))return alert(`Music track "${e}" not loaded.`),!1;const s=this.currentMusic?this.currentMusic.source:null;return this.playMusic(e,{...i,fadeIn:t,volume:i.volume||1,stopCurrent:!1}),s&&this.fadeOut(s,t),!0}cleanup(){this.stopAll(),this.audioContext&&(this.audioContext.close(),this.audioContext=null),this.audioBuffers.clear(),this.preloadedAudioData.clear(),this.activeSources.clear(),this.activeMusicSources.clear(),this.currentMusic=null,this.isInitialized=!1}getState(){return{isInitialized:this.isInitialized,audioContextState:this.audioContext?this.audioContext.state:"none",loadedAudio:Array.from(this.audioBuffers.keys()),preloadedAudio:Array.from(this.preloadedAudioData.keys()),activeSources:this.activeSources.size,activeMusicSources:this.activeMusicSources.size,currentMusic:this.currentMusic?this.currentMusic.name:null,isMusicPaused:this.isMusicPaused,volumes:{...this.volumes}}}}class A{constructor(e){this.objectManager=e,this.configManager=this.objectManager.getById("ConfigManager"),this.audioMark=this.objectManager.register("AudioMark",new E),this.audioEnabled=this.configManager.audioEnabled,this.musicPlaying=!1,this._preloadPromise=null,this.audioPreloaded=!1}doToast(e,t="",i="info"){this.sceneManager||(this.sceneManager=this.objectManager.getById("SceneManager")),this.sceneManager.doToast(e,t,i)}async preloadAudio(){if(!this._preloadPromise){const e=[this.audioMark.preloadAudio("MenuMusic","audio/calm-background-pixabay.mp3"),this.audioMark.preloadAudio("GameMusic","audio/BounceXJimHall.mp3"),this.audioMark.preloadAudio("Combine1","audio/combine1-pixabay.mp3"),this.audioMark.preloadAudio("Combine2","audio/combine2-pixabay.mp3"),this.audioMark.preloadAudio("Combine3","audio/combine3-pixabay.mp3"),this.audioMark.preloadAudio("Combine4","audio/combine4-pixabay.mp3"),this.audioMark.preloadAudio("Combine5","audio/combine5-pixabay.mp3"),this.audioMark.preloadAudio("Combine6","audio/combine6-pixabay.mp3"),this.audioMark.preloadAudio("Beep","audio/bleep-pixabay.mp3"),this.audioMark.preloadAudio("GameOver","audio/endgame-pixabay.mp3")];this._preloadPromise=Promise.all(e).then(()=>{this.audioPreloaded=!0}).catch(e=>{this.audioPreloaded=!0,this.doToast("Preload audio encountered errors",e.message||"","error")})}return this._preloadPromise}waitForPreload(){return this._preloadPromise||Promise.resolve(this.audioPreloaded)}async initialize(){await this.audioMark.initialize();const e=await this.audioMark.processAllPreloadedAudio();if(Array.isArray(e)){const t=e.filter(e=>!e.success);t.length>0&&this.doToast("Some audio files failed to process",`Failed: ${t.map(e=>e.name).join(", ")}`,"error")}}playSFX(e){this.audioEnabled&&this.audioMark.playSFX(e)}playMusic(e){this.audioEnabled&&(this.audioMark.playMusic(e,{loop:!0}),this.musicPlaying=!0)}transitionMusic(e){this.audioEnabled&&this.audioMark.transitionMusic(e,4,{loop:!0})}stopAll(){this.audioMark.stopAll(),this.musicPlaying=!1}stopMusic(){this.audioMark.stopMusic(),this.musicPlaying=!1}setVolume(){this.audioMark.setVolume("master",this.configManager.masterVolume),this.audioMark.setVolume("music",this.configManager.musicVolume),this.audioMark.setVolume("sfx",this.configManager.sfxVolume)}updateAudioNewSettings(){this.setVolume(),this.audioEnabled=this.configManager.audioEnabled,this.audioEnabled?this.musicPlaying||this.playMusic("MenuMusic"):this.stopAll()}isAudioInitialized(){return this.audioMark.isInitialized}getAudioState(){return this.audioMark.getState()}isAllPreloadedAudioProcessed(){const e=this.audioMark.getState();return 0===e.preloadedAudio.length&&e.loadedAudio.length>0}getAudioProcessingStatus(){const e=this.audioMark.getState();return{isProcessingComplete:this.isAllPreloadedAudioProcessed(),preloadedCount:e.preloadedAudio.length,loadedCount:e.loadedAudio.length,preloadedItems:e.preloadedAudio,loadedItems:e.loadedAudio}}}class P{constructor(e){this.objectManager=e,this.images=new Map,this.loadingPromises=new Map}preloadImages(){this.preload([{url:"images/smiles.png",name:"smiles"},{url:"images/ground.png",name:"ground"},{url:"images/cog.svg",name:"cog"}])}async loadImage(e,t=null){const i=t||e;if(this.images.has(i))return this.images.get(i);if(this.loadingPromises.has(i))return this.loadingPromises.get(i);const s=new Promise((t,s)=>{const a=new Image;a.onload=()=>{this.images.set(i,a),this.loadingPromises.delete(i),t(a)},a.onerror=()=>{this.loadingPromises.delete(i),s(new Error(`Failed to load image: ${e}`))},a.src=e});return this.loadingPromises.set(i,s),s}async loadImages(e){const t=e.map(e=>this.loadImage(e.url,e.name));return Promise.all(t)}getImage(e){return this.images.get(e)||null}isLoaded(e){return this.images.has(e)}isLoading(e){return this.loadingPromises.has(e)}preload(e){e.forEach(e=>{this.loadImage(e.url,e.name).catch(e=>{})})}clear(){this.images.clear(),this.loadingPromises.clear()}remove(e){this.images.delete(e),this.loadingPromises.delete(e)}getStats(){return{loaded:this.images.size,loading:this.loadingPromises.size}}testBackgroundLoading(){this.preloadImages();const e=setInterval(()=>{const t=this.getStats();0===t.loading&&t.loaded>0&&clearInterval(e)},100);return"Function returned immediately while images load in background"}}class C{constructor(){this.registry={}}keyExists(e){return this.registry.hasOwnProperty(e)}register(e,t){this.keyExists(e)&&alert(`ObjectManager: key id '${e}' is already registered!`);const i=t.constructor.name;return this.registry[e]={key:e,objectName:i,object:t},t}deregister(e){const t=Object.entries(this.registry).find(([,t])=>t.object===e);if(!t)return alert("ObjectManager: object not found in registry!"),null;const[i,s]=t;return delete this.registry[i],s.object}getById(e){return this.keyExists(e)?this.registry[e].object:(alert(`ObjectManager: key '${e}' does not exist!`),null)}getObjectStateHtml(){let e="<strong>Objects</strong><br/>";return Object.entries(this.registry).map(([t,i])=>{const s=i.object?.constructor?.name||typeof i.object;e+=`<div>${t}: ${i.objectName} (${s})</div>`}),e}}class T{constructor(){this.canvas=document.getElementById("idCanvasControl"),this.running=!1,this.rafId=null,this.objectManager=new C,this.objectManager.register("Main",this,"Main game controller and entry point"),this.objectManager.register("ConfigManager",new k(this.objectManager),"Manages game configuration and settings"),this.imageHandler=this.objectManager.register("ImageHandler",new P(this.objectManager),"Handles image loading and management"),this.imageHandler.preloadImages(),this.audioHandler=this.objectManager.register("AudioHandler",new A(this.objectManager),"Handles audio loading and playback"),this.audioHandler.preloadAudio(),this.sceneManager=this.objectManager.register("SceneManager",new B(this.objectManager),"Manages game scenes and transitions"),this.inputHandler=this.objectManager.register("InputHandler",new w(this.objectManager),"Handles user input events")}gameLoop(){if(this.running){try{this.inputHandler.getInput(),this.sceneManager.updateFrame()}catch(e){alert("Main loop error: "+e),this.running=!1}this.rafId=requestAnimationFrame(()=>this.gameLoop())}}start(){this.running||(this.sceneManager.start(),this.running=!0,this.gameLoop())}destroy(){this.running=!1,this.rafId&&(cancelAnimationFrame(this.rafId),this.rafId=null),this.config&&this.config.saveToLocalStorage(),this.config=null,this.sceneManager=null,this.inputHandler=null}}document.addEventListener("DOMContentLoaded",()=>{window.main=new T,window.main.start()}),window.addEventListener("beforeunload",()=>{window.main&&window.main.destroy()});
